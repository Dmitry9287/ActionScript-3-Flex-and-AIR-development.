<?xml version="1.0" encoding="UTF-8"?>
<!--

CodeSense Providers map contexts in a document to possible completions. The actual completions are defined in the various CodeSense libraries, categorized using their key. A CodeSense Provider tells Espresso what CodeSense libraries are active in the current context. One of these XML files can contain many <provider> elements.

-->
<codesense>
	<!--
	<provider>
		<selector>as3, fx3 > tag.script.mx</selector>
		<completions>zado.as3.class.toplevel</completions>
		<completions>zado.as3.class.classes</completions>
		<completions>zado.as3.import</completions>
		<completions>zado.as3.common-methods</completions>
		<completions>zado.as3.common-properties</completions>
		<complete-match>[a-zA-Z0-9]+</complete-match>
		<require-prefix>:</require-prefix>
	</provider>keyword.definition.as3:capture(name) + *, keyword.definition.as3:capture(name) + * + *
	
	<provider>
		<selector>keyword.definition.as3 + *</selector>
		<completions>zado.as3.test.${name}</completions>
		<complete-match>[a-zA-Z0-9-]+</complete-match>
		<require-suffix>[^:]|</require-suffix>
	</provider>
	
	
	<provider>
		<selector>as3 > keyword.definition.class.as3[text='MovieClip'] + *</selector>
		<completions>com.wizaado.classes.MovieClip</completions>
		<completions>com.wizaado.classes.Sprite</completions>
		<completions>com.wizaado.classes.DisplayObject</completions>
		<completions>com.wizaado.classes.EventDispatcher</completions>
		<complete-match>[a-zA-Z0-9-]*</complete-match>
		<require-suffix>(\.|\s|^)</require-suffix>
	</provider>
	-->
	<provider>
		<selector>as3</selector>
		<completions>com.wizaado.as3.classes</completions>
		<complete-match capture="2">(^|\:|;|{|new\s+)([a-zA-Z0-9-]*)</complete-match>
		<require-suffix>(\.|\:|\s|}|^|{)</require-suffix>
	</provider>
	
</codesense>
