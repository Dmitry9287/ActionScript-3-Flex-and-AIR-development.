<?xml version="1.0"?>
<codesense version="1.0">
<set name="com.wizaado.classes.CustomActions"><completion string="CustomActions"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getActions"><behavior><append-static><transform-into>(${1:name:String});</transform-into></append-static></behavior></completion><completion string="installActions"><behavior><append-static><transform-into>(${1:name:String}, ${2:data:String});</transform-into></append-static></behavior></completion><completion string="uninstallActions"><behavior><append-static><transform-into>(${1:name:String});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ProductManager"><completion string="download"><behavior><append-static><transform-into>(${1:caption:String=null}, ${2:fileName:String=null}, ${3:pathElements:Array=null});</transform-into></append-static></behavior></completion><completion string="launch"><behavior><append-static><transform-into>(${1:parameters:String=null});</transform-into></append-static></behavior></completion><completion string="ProductManager"><behavior><append-static><transform-into>(${1:name:String});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.XMLUI"><completion string="accept"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="cancel"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getProperty"><behavior><append-static><transform-into>(${1:name:String});</transform-into></append-static></behavior></completion><completion string="setProperty"><behavior><append-static><transform-into>(${1:name:String}, ${2:value:String});</transform-into></append-static></behavior></completion><completion string="XMLUI"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ArgumentError"><completion string="length"></completion><completion string="ArgumentError"><behavior><append-static><transform-into>(${1:message:*=""}, ${2:id:*=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.arguments"><completion string="callee:Function"></completion><completion string="length:Number"></completion></set><set name="com.wizaado.classes.Array"><completion string="CASEINSENSITIVE"></completion><completion string="DESCENDING"></completion><completion string="length"></completion><completion string="NUMERIC"></completion><completion string="RETURNINDEXEDARRAY"></completion><completion string="UNIQUESORT"></completion><completion string="length"><behavior><append-static><transform-into>(${1:newLength:uint});</transform-into></append-static></behavior></completion><completion string="Array"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="concat"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="every"><behavior><append-static><transform-into>(${1:callback:Function}, ${2:thisObject:*=null});</transform-into></append-static></behavior></completion><completion string="filter"><behavior><append-static><transform-into>(${1:callback:Function}, ${2:thisObject:*=null});</transform-into></append-static></behavior></completion><completion string="forEach"><behavior><append-static><transform-into>(${1:callback:Function}, ${2:thisObject:*=null});</transform-into></append-static></behavior></completion><completion string="indexOf"><behavior><append-static><transform-into>(${1:searchElement:*}, ${2:fromIndex:*=0});</transform-into></append-static></behavior></completion><completion string="join"><behavior><append-static><transform-into>(${1:sep:*=null});</transform-into></append-static></behavior></completion><completion string="lastIndexOf"><behavior><append-static><transform-into>(${1:searchElement:*}, ${2:fromIndex:*=2147483647});</transform-into></append-static></behavior></completion><completion string="map"><behavior><append-static><transform-into>(${1:callback:Function}, ${2:thisObject:*=null});</transform-into></append-static></behavior></completion><completion string="pop"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="push"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="reverse"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="shift"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="slice"><behavior><append-static><transform-into>(${1:A:*=0}, ${2:B:*=4294967295});</transform-into></append-static></behavior></completion><completion string="some"><behavior><append-static><transform-into>(${1:callback:Function}, ${2:thisObject:*=null});</transform-into></append-static></behavior></completion><completion string="sort"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="sortOn"><behavior><append-static><transform-into>(${1:names:*}, ${2:options:*=0});</transform-into></append-static></behavior></completion><completion string="splice"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="unshift"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Boolean"><completion string="length"></completion><completion string="Boolean"><behavior><append-static><transform-into>(${1:value:*=null});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="valueOf"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Class"><completion string="length"></completion><completion string="Class"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Date"><completion string="length"></completion><completion string="date"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="dateUTC"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="fullYear"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="fullYearUTC"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="hours"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="hoursUTC"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="milliseconds"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="millisecondsUTC"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="minutes"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="minutesUTC"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="month"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="monthUTC"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="seconds"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="secondsUTC"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="time"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="Date"><behavior><append-static><transform-into>(${1:year:*=null}, ${2:month:*=null}, ${3:date:*=null}, ${4:hours:*=null}, ${5:minutes:*=null}, ${6:seconds:*=null}, ${7:ms:*=null});</transform-into></append-static></behavior></completion><completion string="getDate"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getDay"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getFullYear"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getHours"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getMilliseconds"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getMinutes"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getMonth"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getSeconds"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getTime"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getTimezoneOffset"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getUTCDate"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getUTCDay"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getUTCFullYear"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getUTCHours"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getUTCMilliseconds"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getUTCMinutes"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getUTCMonth"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getUTCSeconds"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="parse"><behavior><append-static><transform-into>(${1:s:*});</transform-into></append-static></behavior></completion><completion string="setDate"><behavior><append-static><transform-into>(${1:date:*=null});</transform-into></append-static></behavior></completion><completion string="setFullYear"><behavior><append-static><transform-into>(${1:year:*=null}, ${2:month:*=null}, ${3:date:*=null});</transform-into></append-static></behavior></completion><completion string="setHours"><behavior><append-static><transform-into>(${1:hour:*=null}, ${2:min:*=null}, ${3:sec:*=null}, ${4:ms:*=null});</transform-into></append-static></behavior></completion><completion string="setMilliseconds"><behavior><append-static><transform-into>(${1:ms:*=null});</transform-into></append-static></behavior></completion><completion string="setMinutes"><behavior><append-static><transform-into>(${1:min:*=null}, ${2:sec:*=null}, ${3:ms:*=null});</transform-into></append-static></behavior></completion><completion string="setMonth"><behavior><append-static><transform-into>(${1:month:*=null}, ${2:date:*=null});</transform-into></append-static></behavior></completion><completion string="setSeconds"><behavior><append-static><transform-into>(${1:sec:*=null}, ${2:ms:*=null});</transform-into></append-static></behavior></completion><completion string="setTime"><behavior><append-static><transform-into>(${1:t:*=null});</transform-into></append-static></behavior></completion><completion string="setUTCDate"><behavior><append-static><transform-into>(${1:date:*=null});</transform-into></append-static></behavior></completion><completion string="setUTCFullYear"><behavior><append-static><transform-into>(${1:year:*=null}, ${2:month:*=null}, ${3:date:*=null});</transform-into></append-static></behavior></completion><completion string="setUTCHours"><behavior><append-static><transform-into>(${1:hour:*=null}, ${2:min:*=null}, ${3:sec:*=null}, ${4:ms:*=null});</transform-into></append-static></behavior></completion><completion string="setUTCMilliseconds"><behavior><append-static><transform-into>(${1:ms:*=null});</transform-into></append-static></behavior></completion><completion string="setUTCMinutes"><behavior><append-static><transform-into>(${1:min:*=null}, ${2:sec:*=null}, ${3:ms:*=null});</transform-into></append-static></behavior></completion><completion string="setUTCMonth"><behavior><append-static><transform-into>(${1:month:*=null}, ${2:date:*=null});</transform-into></append-static></behavior></completion><completion string="setUTCSeconds"><behavior><append-static><transform-into>(${1:sec:*=null}, ${2:ms:*=null});</transform-into></append-static></behavior></completion><completion string="toDateString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toLocaleDateString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toLocaleString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toLocaleTimeString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toTimeString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toUTCString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="UTC"><behavior><append-static><transform-into>(${1:year:*}, ${2:month:*}, ${3:date:*=1}, ${4:hours:*=0}, ${5:minutes:*=0}, ${6:seconds:*=0}, ${7:ms:*=0});</transform-into></append-static></behavior></completion><completion string="valueOf"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.DefinitionError"><completion string="length"></completion><completion string="DefinitionError"><behavior><append-static><transform-into>(${1:message:*=""}, ${2:id:*=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Error"><completion string="length"></completion><completion string="message"></completion><completion string="name"></completion><completion string="Error"><behavior><append-static><transform-into>(${1:message:*=""}, ${2:id:*=0});</transform-into></append-static></behavior></completion><completion string="getErrorMessage"><behavior><append-static><transform-into>(${1:index:int});</transform-into></append-static></behavior></completion><completion string="getStackTrace"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="throwError"><behavior><append-static><transform-into>(${1:type:Class}, ${2:index:uint});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.EvalError"><completion string="length"></completion><completion string="EvalError"><behavior><append-static><transform-into>(${1:message:*=""}, ${2:id:*=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Accessibility"><completion string="Accessibility"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="sendEvent"><behavior><append-static><transform-into>(${1:source:DisplayObject}, ${2:childID:uint}, ${3:eventType:uint}, ${4:nonHTML:Boolean=false});</transform-into></append-static></behavior></completion><completion string="updateProperties"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.AccessibilityImplementation"><completion string="errno"></completion><completion string="stub"></completion><completion string="accDoDefaultAction"><behavior><append-static><transform-into>(${1:childID:uint});</transform-into></append-static></behavior></completion><completion string="AccessibilityImplementation"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="accLocation"><behavior><append-static><transform-into>(${1:childID:uint});</transform-into></append-static></behavior></completion><completion string="accSelect"><behavior><append-static><transform-into>(${1:operation:uint}, ${2:childID:uint});</transform-into></append-static></behavior></completion><completion string="get_accDefaultAction"><behavior><append-static><transform-into>(${1:childID:uint});</transform-into></append-static></behavior></completion><completion string="get_accFocus"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="get_accName"><behavior><append-static><transform-into>(${1:childID:uint});</transform-into></append-static></behavior></completion><completion string="get_accRole"><behavior><append-static><transform-into>(${1:childID:uint});</transform-into></append-static></behavior></completion><completion string="get_accSelection"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="get_accState"><behavior><append-static><transform-into>(${1:childID:uint});</transform-into></append-static></behavior></completion><completion string="get_accValue"><behavior><append-static><transform-into>(${1:childID:uint});</transform-into></append-static></behavior></completion><completion string="getChildIDArray"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="isLabeledBy"><behavior><append-static><transform-into>(${1:labelBounds:Rectangle});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.AccessibilityProperties"><completion string="description"></completion><completion string="forceSimple"></completion><completion string="name"></completion><completion string="noAutoLabeling"></completion><completion string="shortcut"></completion><completion string="silent"></completion><completion string="AccessibilityProperties"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ActionScriptVersion"><completion string="ACTIONSCRIPT2"></completion><completion string="ACTIONSCRIPT3"></completion><completion string="ActionScriptVersion"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.AVM1Movie"><completion string="addCallback"><behavior><append-static><transform-into>(${1:functionName:String}, ${2:closure:Function});</transform-into></append-static></behavior></completion><completion string="AVM1Movie"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="call"><behavior><append-static><transform-into>(${1:functionName:String});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Bitmap"><completion string="bitmapData"><behavior><append-static><transform-into>(${1:value:BitmapData});</transform-into></append-static></behavior></completion><completion string="pixelSnapping"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="smoothing"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="Bitmap"><behavior><append-static><transform-into>(${1:bitmapData:BitmapData=null}, ${2:pixelSnapping:String="auto"}, ${3:smoothing:Boolean=false});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.BitmapData"><completion string="applyFilter"><behavior><append-static><transform-into>(${1:sourceBitmapData:BitmapData}, ${2:sourceRect:Rectangle}, ${3:destPoint:Point}, ${4:filter:BitmapFilter});</transform-into></append-static></behavior></completion><completion string="BitmapData"><behavior><append-static><transform-into>(${1:width:int}, ${2:height:int}, ${3:transparent:Boolean=true}, ${4:fillColor:uint=4294967295});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="colorTransform"><behavior><append-static><transform-into>(${1:rect:Rectangle}, ${2:colorTransform:ColorTransform});</transform-into></append-static></behavior></completion><completion string="compare"><behavior><append-static><transform-into>(${1:otherBitmapData:BitmapData});</transform-into></append-static></behavior></completion><completion string="copyChannel"><behavior><append-static><transform-into>(${1:sourceBitmapData:BitmapData}, ${2:sourceRect:Rectangle}, ${3:destPoint:Point}, ${4:sourceChannel:uint}, ${5:destChannel:uint});</transform-into></append-static></behavior></completion><completion string="copyPixels"><behavior><append-static><transform-into>(${1:sourceBitmapData:BitmapData}, ${2:sourceRect:Rectangle}, ${3:destPoint:Point}, ${4:alphaBitmapData:BitmapData=null}, ${5:alphaPoint:Point=null}, ${6:mergeAlpha:Boolean=false});</transform-into></append-static></behavior></completion><completion string="dispose"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="draw"><behavior><append-static><transform-into>(${1:source:IBitmapDrawable}, ${2:matrix:Matrix=null}, ${3:colorTransform:ColorTransform=null}, ${4:blendMode:String=null}, ${5:clipRect:Rectangle=null}, ${6:smoothing:Boolean=false});</transform-into></append-static></behavior></completion><completion string="fillRect"><behavior><append-static><transform-into>(${1:rect:Rectangle}, ${2:color:uint});</transform-into></append-static></behavior></completion><completion string="floodFill"><behavior><append-static><transform-into>(${1:x:int}, ${2:y:int}, ${3:color:uint});</transform-into></append-static></behavior></completion><completion string="generateFilterRect"><behavior><append-static><transform-into>(${1:sourceRect:Rectangle}, ${2:filter:BitmapFilter});</transform-into></append-static></behavior></completion><completion string="getColorBoundsRect"><behavior><append-static><transform-into>(${1:mask:uint}, ${2:color:uint}, ${3:findColor:Boolean=true});</transform-into></append-static></behavior></completion><completion string="getPixel"><behavior><append-static><transform-into>(${1:x:int}, ${2:y:int});</transform-into></append-static></behavior></completion><completion string="getPixel32"><behavior><append-static><transform-into>(${1:x:int}, ${2:y:int});</transform-into></append-static></behavior></completion><completion string="getPixels"><behavior><append-static><transform-into>(${1:rect:Rectangle});</transform-into></append-static></behavior></completion><completion string="hitTest"><behavior><append-static><transform-into>(${1:firstPoint:Point}, ${2:firstAlphaThreshold:uint}, ${3:secondObject:Object}, ${4:secondBitmapDataPoint:Point=null}, ${5:secondAlphaThreshold:uint=1});</transform-into></append-static></behavior></completion><completion string="lock"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="merge"><behavior><append-static><transform-into>(${1:sourceBitmapData:BitmapData}, ${2:sourceRect:Rectangle}, ${3:destPoint:Point}, ${4:redMultiplier:uint}, ${5:greenMultiplier:uint}, ${6:blueMultiplier:uint}, ${7:alphaMultiplier:uint});</transform-into></append-static></behavior></completion><completion string="noise"><behavior><append-static><transform-into>(${1:randomSeed:int}, ${2:low:uint=0}, ${3:high:uint=255}, ${4:channelOptions:uint=7}, ${5:grayScale:Boolean=false});</transform-into></append-static></behavior></completion><completion string="paletteMap"><behavior><append-static><transform-into>(${1:sourceBitmapData:BitmapData}, ${2:sourceRect:Rectangle}, ${3:destPoint:Point}, ${4:redArray:Array=null}, ${5:greenArray:Array=null}, ${6:blueArray:Array=null}, ${7:alphaArray:Array=null});</transform-into></append-static></behavior></completion><completion string="perlinNoise"><behavior><append-static><transform-into>(${1:baseX:Number}, ${2:baseY:Number}, ${3:numOctaves:uint}, ${4:randomSeed:int}, ${5:stitch:Boolean}, ${6:fractalNoise:Boolean}, ${7:channelOptions:uint=7}, ${8:grayScale:Boolean=false}, ${9:offsets:Array=null});</transform-into></append-static></behavior></completion><completion string="pixelDissolve"><behavior><append-static><transform-into>(${1:sourceBitmapData:BitmapData}, ${2:sourceRect:Rectangle}, ${3:destPoint:Point}, ${4:randomSeed:int=0}, ${5:numPixels:int=0}, ${6:fillColor:uint=0});</transform-into></append-static></behavior></completion><completion string="scroll"><behavior><append-static><transform-into>(${1:x:int}, ${2:y:int});</transform-into></append-static></behavior></completion><completion string="setPixel"><behavior><append-static><transform-into>(${1:x:int}, ${2:y:int}, ${3:color:uint});</transform-into></append-static></behavior></completion><completion string="setPixel32"><behavior><append-static><transform-into>(${1:x:int}, ${2:y:int}, ${3:color:uint});</transform-into></append-static></behavior></completion><completion string="setPixels"><behavior><append-static><transform-into>(${1:rect:Rectangle}, ${2:inputByteArray:ByteArray});</transform-into></append-static></behavior></completion><completion string="threshold"><behavior><append-static><transform-into>(${1:sourceBitmapData:BitmapData}, ${2:sourceRect:Rectangle}, ${3:destPoint:Point}, ${4:operation:String}, ${5:threshold:uint}, ${6:color:uint=0}, ${7:mask:uint=4294967295}, ${8:copySource:Boolean=false});</transform-into></append-static></behavior></completion><completion string="unlock"><behavior><append-static><transform-into>(${1:changeRect:Rectangle=null});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.BitmapDataChannel"><completion string="ALPHA"></completion><completion string="BLUE"></completion><completion string="GREEN"></completion><completion string="RED"></completion><completion string="BitmapDataChannel"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.BlendMode"><completion string="ADD"></completion><completion string="ALPHA"></completion><completion string="DARKEN"></completion><completion string="DIFFERENCE"></completion><completion string="ERASE"></completion><completion string="HARDLIGHT"></completion><completion string="INVERT"></completion><completion string="LAYER"></completion><completion string="LIGHTEN"></completion><completion string="MULTIPLY"></completion><completion string="NORMAL"></completion><completion string="OVERLAY"></completion><completion string="SCREEN"></completion><completion string="SUBTRACT"></completion><completion string="BlendMode"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.CapsStyle"><completion string="NONE"></completion><completion string="ROUND"></completion><completion string="SQUARE"></completion><completion string="CapsStyle"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.DisplayObject"><completion string="accessibilityProperties"><behavior><append-static><transform-into>(${1:value:AccessibilityProperties});</transform-into></append-static></behavior></completion><completion string="alpha"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="blendMode"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="cacheAsBitmap"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="filters"><behavior><append-static><transform-into>(${1:value:Array});</transform-into></append-static></behavior></completion><completion string="height"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="mask"><behavior><append-static><transform-into>(${1:value:DisplayObject});</transform-into></append-static></behavior></completion><completion string="name"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="opaqueBackground"><behavior><append-static><transform-into>(${1:value:Object});</transform-into></append-static></behavior></completion><completion string="rotation"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="scale9Grid"><behavior><append-static><transform-into>(${1:innerRectangle:Rectangle});</transform-into></append-static></behavior></completion><completion string="scaleX"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="scaleY"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="scrollRect"><behavior><append-static><transform-into>(${1:value:Rectangle});</transform-into></append-static></behavior></completion><completion string="transform"><behavior><append-static><transform-into>(${1:value:Transform});</transform-into></append-static></behavior></completion><completion string="width"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="visible"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="x"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="y"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="DisplayObject"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getBounds"><behavior><append-static><transform-into>(${1:targetCoordinateSpace:DisplayObject});</transform-into></append-static></behavior></completion><completion string="getRect"><behavior><append-static><transform-into>(${1:targetCoordinateSpace:DisplayObject});</transform-into></append-static></behavior></completion><completion string="globalToLocal"><behavior><append-static><transform-into>(${1:point:Point});</transform-into></append-static></behavior></completion><completion string="hitTestObject"><behavior><append-static><transform-into>(${1:obj:DisplayObject});</transform-into></append-static></behavior></completion><completion string="hitTestPoint"><behavior><append-static><transform-into>(${1:x:Number}, ${2:y:Number}, ${3:shapeFlag:Boolean=false});</transform-into></append-static></behavior></completion><completion string="localToGlobal"><behavior><append-static><transform-into>(${1:point:Point});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.DisplayObjectContainer"><completion string="mouseChildren"><behavior><append-static><transform-into>(${1:enable:Boolean});</transform-into></append-static></behavior></completion><completion string="tabChildren"><behavior><append-static><transform-into>(${1:enable:Boolean});</transform-into></append-static></behavior></completion><completion string="addChild"><behavior><append-static><transform-into>(${1:child:DisplayObject});</transform-into></append-static></behavior></completion><completion string="addChildAt"><behavior><append-static><transform-into>(${1:child:DisplayObject}, ${2:index:int});</transform-into></append-static></behavior></completion><completion string="areInaccessibleObjectsUnderPoint"><behavior><append-static><transform-into>(${1:point:Point});</transform-into></append-static></behavior></completion><completion string="contains"><behavior><append-static><transform-into>(${1:child:DisplayObject});</transform-into></append-static></behavior></completion><completion string="DisplayObjectContainer"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getChildAt"><behavior><append-static><transform-into>(${1:index:int});</transform-into></append-static></behavior></completion><completion string="getChildByName"><behavior><append-static><transform-into>(${1:name:String});</transform-into></append-static></behavior></completion><completion string="getChildIndex"><behavior><append-static><transform-into>(${1:child:DisplayObject});</transform-into></append-static></behavior></completion><completion string="getObjectsUnderPoint"><behavior><append-static><transform-into>(${1:point:Point});</transform-into></append-static></behavior></completion><completion string="removeChild"><behavior><append-static><transform-into>(${1:child:DisplayObject});</transform-into></append-static></behavior></completion><completion string="removeChildAt"><behavior><append-static><transform-into>(${1:index:int});</transform-into></append-static></behavior></completion><completion string="setChildIndex"><behavior><append-static><transform-into>(${1:child:DisplayObject}, ${2:index:int});</transform-into></append-static></behavior></completion><completion string="swapChildren"><behavior><append-static><transform-into>(${1:child1:DisplayObject}, ${2:child2:DisplayObject});</transform-into></append-static></behavior></completion><completion string="swapChildrenAt"><behavior><append-static><transform-into>(${1:index1:int}, ${2:index2:int});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.FrameLabel"><completion string="FrameLabel"><behavior><append-static><transform-into>(${1:name:String}, ${2:frame:int});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.GradientType"><completion string="LINEAR"></completion><completion string="RADIAL"></completion><completion string="GradientType"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Graphics"><completion string="beginBitmapFill"><behavior><append-static><transform-into>(${1:bitmap:BitmapData}, ${2:matrix:Matrix=null}, ${3:repeat:Boolean=true}, ${4:smooth:Boolean=false});</transform-into></append-static></behavior></completion><completion string="beginFill"><behavior><append-static><transform-into>(${1:color:uint}, ${2:alpha:Number=1});</transform-into></append-static></behavior></completion><completion string="beginGradientFill"><behavior><append-static><transform-into>(${1:type:String}, ${2:colors:Array}, ${3:alphas:Array}, ${4:ratios:Array}, ${5:matrix:Matrix=null}, ${6:spreadMethod:String="pad"}, ${7:interpolationMethod:String="rgb"}, ${8:focalPointRatio:Number=0});</transform-into></append-static></behavior></completion><completion string="clear"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="curveTo"><behavior><append-static><transform-into>(${1:controlX:Number}, ${2:controlY:Number}, ${3:anchorX:Number}, ${4:anchorY:Number});</transform-into></append-static></behavior></completion><completion string="drawCircle"><behavior><append-static><transform-into>(${1:x:Number}, ${2:y:Number}, ${3:radius:Number});</transform-into></append-static></behavior></completion><completion string="drawEllipse"><behavior><append-static><transform-into>(${1:x:Number}, ${2:y:Number}, ${3:width:Number}, ${4:height:Number});</transform-into></append-static></behavior></completion><completion string="drawRect"><behavior><append-static><transform-into>(${1:x:Number}, ${2:y:Number}, ${3:width:Number}, ${4:height:Number});</transform-into></append-static></behavior></completion><completion string="drawRoundRect"><behavior><append-static><transform-into>(${1:x:Number}, ${2:y:Number}, ${3:width:Number}, ${4:height:Number}, ${5:ellipseWidth:Number}, ${6:ellipseHeight:Number=null});</transform-into></append-static></behavior></completion><completion string="drawRoundRectComplex"><behavior><append-static><transform-into>(${1:x:Number}, ${2:y:Number}, ${3:width:Number}, ${4:height:Number}, ${5:topLeftRadius:Number}, ${6:topRightRadius:Number}, ${7:bottomLeftRadius:Number}, ${8:bottomRightRadius:Number});</transform-into></append-static></behavior></completion><completion string="endFill"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="Graphics"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="lineGradientStyle"><behavior><append-static><transform-into>(${1:type:String}, ${2:colors:Array}, ${3:alphas:Array}, ${4:ratios:Array}, ${5:matrix:Matrix=null}, ${6:spreadMethod:String="pad"}, ${7:interpolationMethod:String="rgb"}, ${8:focalPointRatio:Number=0});</transform-into></append-static></behavior></completion><completion string="lineStyle"><behavior><append-static><transform-into>(${1:thickness:Number=null}, ${2:color:uint=0}, ${3:alpha:Number=1}, ${4:pixelHinting:Boolean=false}, ${5:scaleMode:String="normal"}, ${6:caps:String=null}, ${7:joints:String=null}, ${8:miterLimit:Number=3});</transform-into></append-static></behavior></completion><completion string="lineTo"><behavior><append-static><transform-into>(${1:x:Number}, ${2:y:Number});</transform-into></append-static></behavior></completion><completion string="moveTo"><behavior><append-static><transform-into>(${1:x:Number}, ${2:y:Number});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.InteractiveObject"><completion string="accessibilityImplementation"><behavior><append-static><transform-into>(${1:value:AccessibilityImplementation});</transform-into></append-static></behavior></completion><completion string="contextMenu"><behavior><append-static><transform-into>(${1:cm:ContextMenu});</transform-into></append-static></behavior></completion><completion string="doubleClickEnabled"><behavior><append-static><transform-into>(${1:enabled:Boolean});</transform-into></append-static></behavior></completion><completion string="focusRect"><behavior><append-static><transform-into>(${1:focusRect:Object});</transform-into></append-static></behavior></completion><completion string="mouseEnabled"><behavior><append-static><transform-into>(${1:enabled:Boolean});</transform-into></append-static></behavior></completion><completion string="tabEnabled"><behavior><append-static><transform-into>(${1:enabled:Boolean});</transform-into></append-static></behavior></completion><completion string="tabIndex"><behavior><append-static><transform-into>(${1:index:int});</transform-into></append-static></behavior></completion><completion string="InteractiveObject"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.InterpolationMethod"><completion string="LINEAR_RGB"></completion><completion string="RGB"></completion><completion string="InterpolationMethod"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.JointStyle"><completion string="BEVEL"></completion><completion string="MITER"></completion><completion string="ROUND"></completion><completion string="JointStyle"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.LineScaleMode"><completion string="HORIZONTAL"></completion><completion string="NONE"></completion><completion string="NORMAL"></completion><completion string="VERTICAL"></completion><completion string="LineScaleMode"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Loader"><completion string="addChild"><behavior><append-static><transform-into>(${1:child:DisplayObject});</transform-into></append-static></behavior></completion><completion string="addChildAt"><behavior><append-static><transform-into>(${1:child:DisplayObject}, ${2:index:int});</transform-into></append-static></behavior></completion><completion string="close"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="load"><behavior><append-static><transform-into>(${1:request:URLRequest}, ${2:context:LoaderContext=null});</transform-into></append-static></behavior></completion><completion string="loadBytes"><behavior><append-static><transform-into>(${1:bytes:ByteArray}, ${2:context:LoaderContext=null});</transform-into></append-static></behavior></completion><completion string="Loader"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="removeChild"><behavior><append-static><transform-into>(${1:child:DisplayObject});</transform-into></append-static></behavior></completion><completion string="removeChildAt"><behavior><append-static><transform-into>(${1:index:int});</transform-into></append-static></behavior></completion><completion string="setChildIndex"><behavior><append-static><transform-into>(${1:child:DisplayObject}, ${2:index:int});</transform-into></append-static></behavior></completion><completion string="unload"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.LoaderInfo"><completion string="dispatchEvent"><behavior><append-static><transform-into>(${1:event:Event});</transform-into></append-static></behavior></completion><completion string="getLoaderInfoByDefinition"><behavior><append-static><transform-into>(${1:object:Object});</transform-into></append-static></behavior></completion><completion string="LoaderInfo"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.MorphShape"><completion string="MorphShape"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.MovieClip"><completion string="enabled"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="trackAsMenu"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="addFrameScript"><behavior><append-static><transform-into>(${1:frame:int}, ${2:method:Function});</transform-into></append-static></behavior></completion><completion string="gotoAndPlay"><behavior><append-static><transform-into>(${1:frame:Object}, ${2:scene:String=null});</transform-into></append-static></behavior></completion><completion string="gotoAndStop"><behavior><append-static><transform-into>(${1:frame:Object}, ${2:scene:String=null});</transform-into></append-static></behavior></completion><completion string="MovieClip"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="nextFrame"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="nextScene"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="play"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="prevFrame"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="prevScene"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="stop"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.PixelSnapping"><completion string="ALWAYS"></completion><completion string="AUTO"></completion><completion string="NEVER"></completion><completion string="PixelSnapping"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Scene"><completion string="Scene"><behavior><append-static><transform-into>(${1:name:String}, ${2:labels:Array}, ${3:numFrames:int});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Shape"><completion string="Shape"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.SimpleButton"><completion string="downState"><behavior><append-static><transform-into>(${1:value:DisplayObject});</transform-into></append-static></behavior></completion><completion string="enabled"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="hitTestState"><behavior><append-static><transform-into>(${1:value:DisplayObject});</transform-into></append-static></behavior></completion><completion string="overState"><behavior><append-static><transform-into>(${1:value:DisplayObject});</transform-into></append-static></behavior></completion><completion string="soundTransform"><behavior><append-static><transform-into>(${1:sndTransform:SoundTransform});</transform-into></append-static></behavior></completion><completion string="trackAsMenu"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="upState"><behavior><append-static><transform-into>(${1:value:DisplayObject});</transform-into></append-static></behavior></completion><completion string="useHandCursor"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="SimpleButton"><behavior><append-static><transform-into>(${1:upState:DisplayObject=null}, ${2:overState:DisplayObject=null}, ${3:downState:DisplayObject=null}, ${4:hitTestState:DisplayObject=null});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.SpreadMethod"><completion string="PAD"></completion><completion string="REFLECT"></completion><completion string="REPEAT"></completion><completion string="SpreadMethod"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Sprite"><completion string="buttonMode"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="hitArea"><behavior><append-static><transform-into>(${1:value:Sprite});</transform-into></append-static></behavior></completion><completion string="soundTransform"><behavior><append-static><transform-into>(${1:sndTransform:SoundTransform});</transform-into></append-static></behavior></completion><completion string="useHandCursor"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="Sprite"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="startDrag"><behavior><append-static><transform-into>(${1:lockCenter:Boolean=false}, ${2:bounds:Rectangle=null});</transform-into></append-static></behavior></completion><completion string="stopDrag"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Stage"><completion string="accessibilityImplementation"><behavior><append-static><transform-into>(${1:value:AccessibilityImplementation});</transform-into></append-static></behavior></completion><completion string="accessibilityProperties"><behavior><append-static><transform-into>(${1:value:AccessibilityProperties});</transform-into></append-static></behavior></completion><completion string="align"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="alpha"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="blendMode"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="cacheAsBitmap"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="contextMenu"><behavior><append-static><transform-into>(${1:value:ContextMenu});</transform-into></append-static></behavior></completion><completion string="displayState"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="filters"><behavior><append-static><transform-into>(${1:value:Array});</transform-into></append-static></behavior></completion><completion string="focus"><behavior><append-static><transform-into>(${1:newFocus:InteractiveObject});</transform-into></append-static></behavior></completion><completion string="focusRect"><behavior><append-static><transform-into>(${1:value:Object});</transform-into></append-static></behavior></completion><completion string="frameRate"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="fullScreenSourceRect"><behavior><append-static><transform-into>(${1:value:Rectangle});</transform-into></append-static></behavior></completion><completion string="height"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="mask"><behavior><append-static><transform-into>(${1:value:DisplayObject});</transform-into></append-static></behavior></completion><completion string="mouseChildren"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="mouseEnabled"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="name"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="opaqueBackground"><behavior><append-static><transform-into>(${1:value:Object});</transform-into></append-static></behavior></completion><completion string="quality"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="rotation"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="scale9Grid"><behavior><append-static><transform-into>(${1:value:Rectangle});</transform-into></append-static></behavior></completion><completion string="scaleMode"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="scaleX"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="scaleY"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="scrollRect"><behavior><append-static><transform-into>(${1:value:Rectangle});</transform-into></append-static></behavior></completion><completion string="showDefaultContextMenu"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="stageFocusRect"><behavior><append-static><transform-into>(${1:on:Boolean});</transform-into></append-static></behavior></completion><completion string="stageHeight"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="stageWidth"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="tabChildren"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="tabEnabled"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="tabIndex"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="transform"><behavior><append-static><transform-into>(${1:value:Transform});</transform-into></append-static></behavior></completion><completion string="width"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="visible"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="x"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="y"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="addChild"><behavior><append-static><transform-into>(${1:child:DisplayObject});</transform-into></append-static></behavior></completion><completion string="addChildAt"><behavior><append-static><transform-into>(${1:child:DisplayObject}, ${2:index:int});</transform-into></append-static></behavior></completion><completion string="addEventListener"><behavior><append-static><transform-into>(${1:type:String}, ${2:listener:Function}, ${3:useCapture:Boolean=false}, ${4:priority:int=0}, ${5:useWeakReference:Boolean=false});</transform-into></append-static></behavior></completion><completion string="dispatchEvent"><behavior><append-static><transform-into>(${1:event:Event});</transform-into></append-static></behavior></completion><completion string="hasEventListener"><behavior><append-static><transform-into>(${1:type:String});</transform-into></append-static></behavior></completion><completion string="invalidate"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="isFocusInaccessible"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="removeChildAt"><behavior><append-static><transform-into>(${1:index:int});</transform-into></append-static></behavior></completion><completion string="setChildIndex"><behavior><append-static><transform-into>(${1:child:DisplayObject}, ${2:index:int});</transform-into></append-static></behavior></completion><completion string="Stage"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="swapChildrenAt"><behavior><append-static><transform-into>(${1:index1:int}, ${2:index2:int});</transform-into></append-static></behavior></completion><completion string="willTrigger"><behavior><append-static><transform-into>(${1:type:String});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.StageAlign"><completion string="BOTTOM"></completion><completion string="BOTTOM_LEFT"></completion><completion string="BOTTOM_RIGHT"></completion><completion string="LEFT"></completion><completion string="RIGHT"></completion><completion string="TOP"></completion><completion string="TOP_LEFT"></completion><completion string="TOP_RIGHT"></completion><completion string="StageAlign"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.StageDisplayState"><completion string="FULL_SCREEN"></completion><completion string="NORMAL"></completion><completion string="StageDisplayState"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.StageQuality"><completion string="BEST"></completion><completion string="HIGH"></completion><completion string="LOW"></completion><completion string="MEDIUM"></completion><completion string="StageQuality"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.StageScaleMode"><completion string="EXACT_FIT"></completion><completion string="NO_BORDER"></completion><completion string="NO_SCALE"></completion><completion string="SHOW_ALL"></completion><completion string="StageScaleMode"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.SWFVersion"><completion string="FLASH1"></completion><completion string="FLASH2"></completion><completion string="FLASH3"></completion><completion string="FLASH4"></completion><completion string="FLASH5"></completion><completion string="FLASH6"></completion><completion string="FLASH7"></completion><completion string="FLASH8"></completion><completion string="FLASH9"></completion><completion string="SWFVersion"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.EOFError"><completion string="EOFError"><behavior><append-static><transform-into>(${1:message:String=""}, ${2:id:int=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.IllegalOperationError"><completion string="IllegalOperationError"><behavior><append-static><transform-into>(${1:message:String=""}, ${2:id:int=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.InvalidSWFError"><completion string="InvalidSWFError"><behavior><append-static><transform-into>(${1:message:String=""}, ${2:id:int=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.IOError"><completion string="IOError"><behavior><append-static><transform-into>(${1:message:String=""}, ${2:id:int=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.MemoryError"><completion string="MemoryError"><behavior><append-static><transform-into>(${1:message:String=""}, ${2:id:int=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ScriptTimeoutError"><completion string="ScriptTimeoutError"><behavior><append-static><transform-into>(${1:message:String=""}, ${2:id:int=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.StackOverflowError"><completion string="StackOverflowError"><behavior><append-static><transform-into>(${1:message:String=""}, ${2:id:int=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ActivityEvent"><completion string="ACTIVITY"></completion><completion string="activating"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="ActivityEvent"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=false}, ${3:cancelable:Boolean=false}, ${4:activating:Boolean=false});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.AsyncErrorEvent"><completion string="ASYNC_ERROR"></completion><completion string="error"></completion><completion string="AsyncErrorEvent"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=false}, ${3:cancelable:Boolean=false}, ${4:text:String=""}, ${5:error:Error=null});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ContextMenuEvent"><completion string="MENU_ITEM_SELECT"></completion><completion string="MENU_SELECT"></completion><completion string="contextMenuOwner"><behavior><append-static><transform-into>(${1:value:InteractiveObject});</transform-into></append-static></behavior></completion><completion string="mouseTarget"><behavior><append-static><transform-into>(${1:value:InteractiveObject});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="ContextMenuEvent"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=false}, ${3:cancelable:Boolean=false}, ${4:mouseTarget:InteractiveObject=null}, ${5:contextMenuOwner:InteractiveObject=null});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.DataEvent"><completion string="DATA"></completion><completion string="UPLOAD_COMPLETE_DATA"></completion><completion string="data"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="DataEvent"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=false}, ${3:cancelable:Boolean=false}, ${4:data:String=""});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ErrorEvent"><completion string="ERROR"></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="ErrorEvent"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=false}, ${3:cancelable:Boolean=false}, ${4:text:String=""});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Event"><completion string="ACTIVATE"></completion><completion string="ADDED"></completion><completion string="ADDED_TO_STAGE"></completion><completion string="CANCEL"></completion><completion string="CHANGE"></completion><completion string="CLOSE"></completion><completion string="COMPLETE"></completion><completion string="CONNECT"></completion><completion string="DEACTIVATE"></completion><completion string="ENTER_FRAME"></completion><completion string="FULLSCREEN"></completion><completion string="ID3"></completion><completion string="INIT"></completion><completion string="MOUSE_LEAVE"></completion><completion string="OPEN"></completion><completion string="REMOVED"></completion><completion string="REMOVED_FROM_STAGE"></completion><completion string="RENDER"></completion><completion string="RESIZE"></completion><completion string="SCROLL"></completion><completion string="SELECT"></completion><completion string="SOUND_COMPLETE"></completion><completion string="TAB_CHILDREN_CHANGE"></completion><completion string="TAB_ENABLED_CHANGE"></completion><completion string="TAB_INDEX_CHANGE"></completion><completion string="UNLOAD"></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="Event"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=false}, ${3:cancelable:Boolean=false});</transform-into></append-static></behavior></completion><completion string="formatToString"><behavior><append-static><transform-into>(${1:className:String});</transform-into></append-static></behavior></completion><completion string="isDefaultPrevented"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="preventDefault"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="stopImmediatePropagation"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="stopPropagation"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.EventDispatcher"><completion string="addEventListener"><behavior><append-static><transform-into>(${1:type:String}, ${2:listener:Function}, ${3:useCapture:Boolean=false}, ${4:priority:int=0}, ${5:useWeakReference:Boolean=false});</transform-into></append-static></behavior></completion><completion string="dispatchEvent"><behavior><append-static><transform-into>(${1:event:Event});</transform-into></append-static></behavior></completion><completion string="EventDispatcher"><behavior><append-static><transform-into>(${1:target:IEventDispatcher=null});</transform-into></append-static></behavior></completion><completion string="hasEventListener"><behavior><append-static><transform-into>(${1:type:String});</transform-into></append-static></behavior></completion><completion string="removeEventListener"><behavior><append-static><transform-into>(${1:type:String}, ${2:listener:Function}, ${3:useCapture:Boolean=false});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="willTrigger"><behavior><append-static><transform-into>(${1:type:String});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.EventPhase"><completion string="AT_TARGET"></completion><completion string="BUBBLING_PHASE"></completion><completion string="CAPTURING_PHASE"></completion><completion string="EventPhase"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.FocusEvent"><completion string="FOCUS_IN"></completion><completion string="FOCUS_OUT"></completion><completion string="KEY_FOCUS_CHANGE"></completion><completion string="MOUSE_FOCUS_CHANGE"></completion><completion string="keyCode"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="relatedObject"><behavior><append-static><transform-into>(${1:value:InteractiveObject});</transform-into></append-static></behavior></completion><completion string="shiftKey"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="FocusEvent"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=true}, ${3:cancelable:Boolean=false}, ${4:relatedObject:InteractiveObject=null}, ${5:shiftKey:Boolean=false}, ${6:keyCode:uint=0});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.FullScreenEvent"><completion string="FULL_SCREEN"></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="FullScreenEvent"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=false}, ${3:cancelable:Boolean=false}, ${4:fullScreen:Boolean=false});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.HTTPStatusEvent"><completion string="HTTP_STATUS"></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="HTTPStatusEvent"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=false}, ${3:cancelable:Boolean=false}, ${4:status:int=0});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.IMEEvent"><completion string="IME_COMPOSITION"></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="IMEEvent"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=false}, ${3:cancelable:Boolean=false}, ${4:text:String=""});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.IOErrorEvent"><completion string="DISK_ERROR"></completion><completion string="IO_ERROR"></completion><completion string="NETWORK_ERROR"></completion><completion string="VERIFY_ERROR"></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="IOErrorEvent"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=false}, ${3:cancelable:Boolean=false}, ${4:text:String=""});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.KeyboardEvent"><completion string="KEY_DOWN"></completion><completion string="KEY_UP"></completion><completion string="altKey"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="charCode"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="ctrlKey"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="keyCode"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="keyLocation"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="shiftKey"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="KeyboardEvent"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=true}, ${3:cancelable:Boolean=false}, ${4:charCode:uint=0}, ${5:keyCode:uint=0}, ${6:keyLocation:uint=0}, ${7:ctrlKey:Boolean=false}, ${8:altKey:Boolean=false}, ${9:shiftKey:Boolean=false});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="updateAfterEvent"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.MouseEvent"><completion string="CLICK"></completion><completion string="DOUBLE_CLICK"></completion><completion string="MOUSE_DOWN"></completion><completion string="MOUSE_MOVE"></completion><completion string="MOUSE_OUT"></completion><completion string="MOUSE_OVER"></completion><completion string="MOUSE_UP"></completion><completion string="MOUSE_WHEEL"></completion><completion string="ROLL_OUT"></completion><completion string="ROLL_OVER"></completion><completion string="altKey"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="buttonDown"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="ctrlKey"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="delta"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="localX"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="localY"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="relatedObject"><behavior><append-static><transform-into>(${1:value:InteractiveObject});</transform-into></append-static></behavior></completion><completion string="shiftKey"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="MouseEvent"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=true}, ${3:cancelable:Boolean=false}, ${4:localX:Number=null}, ${5:localY:Number=null}, ${6:relatedObject:InteractiveObject=null}, ${7:ctrlKey:Boolean=false}, ${8:altKey:Boolean=false}, ${9:shiftKey:Boolean=false}, ${10:buttonDown:Boolean=false}, ${11:delta:int=0});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="updateAfterEvent"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.NetFilterEvent"><completion string="data"></completion><completion string="header"></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="NetFilterEvent"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=false}, ${3:cancelable:Boolean=false}, ${4:header:ByteArray=null}, ${5:data:ByteArray=null});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.NetStatusEvent"><completion string="NET_STATUS"></completion><completion string="info"><behavior><append-static><transform-into>(${1:value:Object});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="NetStatusEvent"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=false}, ${3:cancelable:Boolean=false}, ${4:info:Object=null});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ProgressEvent"><completion string="PROGRESS"></completion><completion string="SOCKET_DATA"></completion><completion string="bytesLoaded"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="bytesTotal"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="ProgressEvent"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=false}, ${3:cancelable:Boolean=false}, ${4:bytesLoaded:uint=0}, ${5:bytesTotal:uint=0});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.SecurityErrorEvent"><completion string="SECURITY_ERROR"></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="SecurityErrorEvent"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=false}, ${3:cancelable:Boolean=false}, ${4:text:String=""});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.StatusEvent"><completion string="STATUS"></completion><completion string="code"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="level"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="StatusEvent"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=false}, ${3:cancelable:Boolean=false}, ${4:code:String=""}, ${5:level:String=""});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.SyncEvent"><completion string="SYNC"></completion><completion string="changeList"><behavior><append-static><transform-into>(${1:value:Array});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="SyncEvent"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=false}, ${3:cancelable:Boolean=false}, ${4:changeList:Array=null});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.TextEvent"><completion string="LINK"></completion><completion string="TEXT_INPUT"></completion><completion string="text"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="TextEvent"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=false}, ${3:cancelable:Boolean=false}, ${4:text:String=""});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.TimerEvent"><completion string="TIMER"></completion><completion string="TIMER_COMPLETE"></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="TimerEvent"><behavior><append-static><transform-into>(${1:type:String}, ${2:bubbles:Boolean=false}, ${3:cancelable:Boolean=false});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="updateAfterEvent"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.WeakFunctionClosure"><completion string="WeakFunctionClosure"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.WeakMethodClosure"><completion string="WeakMethodClosure"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ExternalInterface"><completion string="marshallExceptions"></completion><completion string="addCallback"><behavior><append-static><transform-into>(${1:functionName:String}, ${2:closure:Function});</transform-into></append-static></behavior></completion><completion string="call"><behavior><append-static><transform-into>(${1:functionName:String});</transform-into></append-static></behavior></completion><completion string="ExternalInterface"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.BevelFilter"><completion string="angle"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="blurX"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="blurY"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="distance"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="highlightAlpha"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="highlightColor"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="knockout"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="quality"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="shadowAlpha"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="shadowColor"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="strength"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="type"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="BevelFilter"><behavior><append-static><transform-into>(${1:distance:Number=4}, ${2:angle:Number=45}, ${3:highlightColor:uint=16777215}, ${4:highlightAlpha:Number=1}, ${5:shadowColor:uint=0}, ${6:shadowAlpha:Number=1}, ${7:blurX:Number=4}, ${8:blurY:Number=4}, ${9:strength:Number=1}, ${10:quality:int=1}, ${11:type:String="inner"}, ${12:knockout:Boolean=false});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.BitmapFilter"><completion string="BitmapFilter"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.BitmapFilterQuality"><completion string="HIGH"></completion><completion string="LOW"></completion><completion string="MEDIUM"></completion><completion string="BitmapFilterQuality"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.BitmapFilterType"><completion string="FULL"></completion><completion string="INNER"></completion><completion string="OUTER"></completion><completion string="BitmapFilterType"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.BlurFilter"><completion string="blurX"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="blurY"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="quality"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="BlurFilter"><behavior><append-static><transform-into>(${1:blurX:Number=4}, ${2:blurY:Number=4}, ${3:quality:int=1});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ColorMatrixFilter"><completion string="matrix"><behavior><append-static><transform-into>(${1:value:Array});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="ColorMatrixFilter"><behavior><append-static><transform-into>(${1:matrix:Array=null});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ConvolutionFilter"><completion string="alpha"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="bias"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="clamp"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="color"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="divisor"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="matrix"><behavior><append-static><transform-into>(${1:value:Array});</transform-into></append-static></behavior></completion><completion string="matrixX"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="matrixY"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="preserveAlpha"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="ConvolutionFilter"><behavior><append-static><transform-into>(${1:matrixX:Number=0}, ${2:matrixY:Number=0}, ${3:matrix:Array=null}, ${4:divisor:Number=1}, ${5:bias:Number=0}, ${6:preserveAlpha:Boolean=true}, ${7:clamp:Boolean=true}, ${8:color:uint=0}, ${9:alpha:Number=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.DisplacementMapFilter"><completion string="alpha"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="color"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="componentX"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="componentY"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="mapBitmap"><behavior><append-static><transform-into>(${1:value:BitmapData});</transform-into></append-static></behavior></completion><completion string="mapPoint"><behavior><append-static><transform-into>(${1:value:Point});</transform-into></append-static></behavior></completion><completion string="mode"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="scaleX"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="scaleY"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="DisplacementMapFilter"><behavior><append-static><transform-into>(${1:mapBitmap:BitmapData=null}, ${2:mapPoint:Point=null}, ${3:componentX:uint=0}, ${4:componentY:uint=0}, ${5:scaleX:Number=0}, ${6:scaleY:Number=0}, ${7:mode:String="wrap"}, ${8:color:uint=0}, ${9:alpha:Number=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.DisplacementMapFilterMode"><completion string="CLAMP"></completion><completion string="COLOR"></completion><completion string="IGNORE"></completion><completion string="WRAP"></completion><completion string="DisplacementMapFilterMode"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.DropShadowFilter"><completion string="alpha"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="angle"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="blurX"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="blurY"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="color"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="distance"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="hideObject"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="inner"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="knockout"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="quality"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="strength"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="DropShadowFilter"><behavior><append-static><transform-into>(${1:distance:Number=4}, ${2:angle:Number=45}, ${3:color:uint=0}, ${4:alpha:Number=1}, ${5:blurX:Number=4}, ${6:blurY:Number=4}, ${7:strength:Number=1}, ${8:quality:int=1}, ${9:inner:Boolean=false}, ${10:knockout:Boolean=false}, ${11:hideObject:Boolean=false});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.GlowFilter"><completion string="alpha"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="blurX"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="blurY"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="color"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="inner"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="knockout"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="quality"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="strength"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="GlowFilter"><behavior><append-static><transform-into>(${1:color:uint=16711680}, ${2:alpha:Number=1}, ${3:blurX:Number=6}, ${4:blurY:Number=6}, ${5:strength:Number=2}, ${6:quality:int=1}, ${7:inner:Boolean=false}, ${8:knockout:Boolean=false});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.GradientBevelFilter"><completion string="alphas"><behavior><append-static><transform-into>(${1:value:Array});</transform-into></append-static></behavior></completion><completion string="angle"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="blurX"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="blurY"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="colors"><behavior><append-static><transform-into>(${1:value:Array});</transform-into></append-static></behavior></completion><completion string="distance"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="knockout"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="quality"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="ratios"><behavior><append-static><transform-into>(${1:value:Array});</transform-into></append-static></behavior></completion><completion string="strength"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="type"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="GradientBevelFilter"><behavior><append-static><transform-into>(${1:distance:Number=4}, ${2:angle:Number=45}, ${3:colors:Array=null}, ${4:alphas:Array=null}, ${5:ratios:Array=null}, ${6:blurX:Number=4}, ${7:blurY:Number=4}, ${8:strength:Number=1}, ${9:quality:int=1}, ${10:type:String="inner"}, ${11:knockout:Boolean=false});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.GradientGlowFilter"><completion string="alphas"><behavior><append-static><transform-into>(${1:value:Array});</transform-into></append-static></behavior></completion><completion string="angle"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="blurX"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="blurY"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="colors"><behavior><append-static><transform-into>(${1:value:Array});</transform-into></append-static></behavior></completion><completion string="distance"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="knockout"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="quality"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="ratios"><behavior><append-static><transform-into>(${1:value:Array});</transform-into></append-static></behavior></completion><completion string="strength"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="type"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="GradientGlowFilter"><behavior><append-static><transform-into>(${1:distance:Number=4}, ${2:angle:Number=45}, ${3:colors:Array=null}, ${4:alphas:Array=null}, ${5:ratios:Array=null}, ${6:blurX:Number=4}, ${7:blurY:Number=4}, ${8:strength:Number=1}, ${9:quality:int=1}, ${10:type:String="inner"}, ${11:knockout:Boolean=false});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ColorTransform"><completion string="alphaMultiplier"></completion><completion string="alphaOffset"></completion><completion string="blueMultiplier"></completion><completion string="blueOffset"></completion><completion string="greenMultiplier"></completion><completion string="greenOffset"></completion><completion string="redMultiplier"></completion><completion string="redOffset"></completion><completion string="color"><behavior><append-static><transform-into>(${1:newColor:uint});</transform-into></append-static></behavior></completion><completion string="ColorTransform"><behavior><append-static><transform-into>(${1:redMultiplier:Number=1}, ${2:greenMultiplier:Number=1}, ${3:blueMultiplier:Number=1}, ${4:alphaMultiplier:Number=1}, ${5:redOffset:Number=0}, ${6:greenOffset:Number=0}, ${7:blueOffset:Number=0}, ${8:alphaOffset:Number=0});</transform-into></append-static></behavior></completion><completion string="concat"><behavior><append-static><transform-into>(${1:second:ColorTransform});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Matrix"><completion string="a"></completion><completion string="b"></completion><completion string="c"></completion><completion string="d"></completion><completion string="tx"></completion><completion string="ty"></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="concat"><behavior><append-static><transform-into>(${1:m:Matrix});</transform-into></append-static></behavior></completion><completion string="createBox"><behavior><append-static><transform-into>(${1:scaleX:Number}, ${2:scaleY:Number}, ${3:rotation:Number=0}, ${4:tx:Number=0}, ${5:ty:Number=0});</transform-into></append-static></behavior></completion><completion string="createGradientBox"><behavior><append-static><transform-into>(${1:width:Number}, ${2:height:Number}, ${3:rotation:Number=0}, ${4:tx:Number=0}, ${5:ty:Number=0});</transform-into></append-static></behavior></completion><completion string="deltaTransformPoint"><behavior><append-static><transform-into>(${1:point:Point});</transform-into></append-static></behavior></completion><completion string="identity"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="invert"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="Matrix"><behavior><append-static><transform-into>(${1:a:Number=1}, ${2:b:Number=0}, ${3:c:Number=0}, ${4:d:Number=1}, ${5:tx:Number=0}, ${6:ty:Number=0});</transform-into></append-static></behavior></completion><completion string="rotate"><behavior><append-static><transform-into>(${1:angle:Number});</transform-into></append-static></behavior></completion><completion string="scale"><behavior><append-static><transform-into>(${1:sx:Number}, ${2:sy:Number});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="transformPoint"><behavior><append-static><transform-into>(${1:point:Point});</transform-into></append-static></behavior></completion><completion string="translate"><behavior><append-static><transform-into>(${1:dx:Number}, ${2:dy:Number});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Point"><completion string="x"></completion><completion string="y"></completion><completion string="add"><behavior><append-static><transform-into>(${1:v:Point});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="distance"><behavior><append-static><transform-into>(${1:pt1:Point}, ${2:pt2:Point});</transform-into></append-static></behavior></completion><completion string="equals"><behavior><append-static><transform-into>(${1:toCompare:Point});</transform-into></append-static></behavior></completion><completion string="interpolate"><behavior><append-static><transform-into>(${1:pt1:Point}, ${2:pt2:Point}, ${3:f:Number});</transform-into></append-static></behavior></completion><completion string="normalize"><behavior><append-static><transform-into>(${1:thickness:Number});</transform-into></append-static></behavior></completion><completion string="offset"><behavior><append-static><transform-into>(${1:dx:Number}, ${2:dy:Number});</transform-into></append-static></behavior></completion><completion string="Point"><behavior><append-static><transform-into>(${1:x:Number=0}, ${2:y:Number=0});</transform-into></append-static></behavior></completion><completion string="polar"><behavior><append-static><transform-into>(${1:len:Number}, ${2:angle:Number});</transform-into></append-static></behavior></completion><completion string="subtract"><behavior><append-static><transform-into>(${1:v:Point});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Rectangle"><completion string="height"></completion><completion string="width"></completion><completion string="x"></completion><completion string="y"></completion><completion string="bottom"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="bottomRight"><behavior><append-static><transform-into>(${1:value:Point});</transform-into></append-static></behavior></completion><completion string="left"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="right"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="size"><behavior><append-static><transform-into>(${1:value:Point});</transform-into></append-static></behavior></completion><completion string="top"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="topLeft"><behavior><append-static><transform-into>(${1:value:Point});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="contains"><behavior><append-static><transform-into>(${1:x:Number}, ${2:y:Number});</transform-into></append-static></behavior></completion><completion string="containsPoint"><behavior><append-static><transform-into>(${1:point:Point});</transform-into></append-static></behavior></completion><completion string="containsRect"><behavior><append-static><transform-into>(${1:rect:Rectangle});</transform-into></append-static></behavior></completion><completion string="equals"><behavior><append-static><transform-into>(${1:toCompare:Rectangle});</transform-into></append-static></behavior></completion><completion string="inflate"><behavior><append-static><transform-into>(${1:dx:Number}, ${2:dy:Number});</transform-into></append-static></behavior></completion><completion string="inflatePoint"><behavior><append-static><transform-into>(${1:point:Point});</transform-into></append-static></behavior></completion><completion string="intersection"><behavior><append-static><transform-into>(${1:toIntersect:Rectangle});</transform-into></append-static></behavior></completion><completion string="intersects"><behavior><append-static><transform-into>(${1:toIntersect:Rectangle});</transform-into></append-static></behavior></completion><completion string="isEmpty"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="offset"><behavior><append-static><transform-into>(${1:dx:Number}, ${2:dy:Number});</transform-into></append-static></behavior></completion><completion string="offsetPoint"><behavior><append-static><transform-into>(${1:point:Point});</transform-into></append-static></behavior></completion><completion string="Rectangle"><behavior><append-static><transform-into>(${1:x:Number=0}, ${2:y:Number=0}, ${3:width:Number=0}, ${4:height:Number=0});</transform-into></append-static></behavior></completion><completion string="setEmpty"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="union"><behavior><append-static><transform-into>(${1:toUnion:Rectangle});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Transform"><completion string="colorTransform"><behavior><append-static><transform-into>(${1:value:ColorTransform});</transform-into></append-static></behavior></completion><completion string="matrix"><behavior><append-static><transform-into>(${1:value:Matrix});</transform-into></append-static></behavior></completion><completion string="Transform"><behavior><append-static><transform-into>(${1:displayObject:DisplayObject});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Camera"><completion string="Camera"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getCamera"><behavior><append-static><transform-into>(${1:name:String=null});</transform-into></append-static></behavior></completion><completion string="setCursor"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="setKeyFrameInterval"><behavior><append-static><transform-into>(${1:keyFrameInterval:int});</transform-into></append-static></behavior></completion><completion string="setLoopback"><behavior><append-static><transform-into>(${1:compress:Boolean=false});</transform-into></append-static></behavior></completion><completion string="setMode"><behavior><append-static><transform-into>(${1:width:int}, ${2:height:int}, ${3:fps:Number}, ${4:favorArea:Boolean=true});</transform-into></append-static></behavior></completion><completion string="setMotionLevel"><behavior><append-static><transform-into>(${1:motionLevel:int}, ${2:timeout:int=2000});</transform-into></append-static></behavior></completion><completion string="setQuality"><behavior><append-static><transform-into>(${1:bandwidth:int}, ${2:quality:int});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ID3Info"><completion string="album"></completion><completion string="artist"></completion><completion string="comment"></completion><completion string="genre"></completion><completion string="songName"></completion><completion string="track"></completion><completion string="year"></completion><completion string="ID3Info"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Microphone"><completion string="gain"><behavior><append-static><transform-into>(${1:gain:Number});</transform-into></append-static></behavior></completion><completion string="rate"><behavior><append-static><transform-into>(${1:rate:int});</transform-into></append-static></behavior></completion><completion string="soundTransform"><behavior><append-static><transform-into>(${1:sndTransform:SoundTransform});</transform-into></append-static></behavior></completion><completion string="getMicrophone"><behavior><append-static><transform-into>(${1:index:int=0});</transform-into></append-static></behavior></completion><completion string="Microphone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="setLoopBack"><behavior><append-static><transform-into>(${1:state:Boolean=true});</transform-into></append-static></behavior></completion><completion string="setSilenceLevel"><behavior><append-static><transform-into>(${1:silenceLevel:Number}, ${2:timeout:int=-1});</transform-into></append-static></behavior></completion><completion string="setUseEchoSuppression"><behavior><append-static><transform-into>(${1:useEchoSuppression:Boolean});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Sound"><completion string="close"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="load"><behavior><append-static><transform-into>(${1:stream:URLRequest}, ${2:context:SoundLoaderContext=null});</transform-into></append-static></behavior></completion><completion string="play"><behavior><append-static><transform-into>(${1:startTime:Number=0}, ${2:loops:int=0}, ${3:sndTransform:SoundTransform=null});</transform-into></append-static></behavior></completion><completion string="Sound"><behavior><append-static><transform-into>(${1:stream:URLRequest=null}, ${2:context:SoundLoaderContext=null});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.SoundChannel"><completion string="soundTransform"><behavior><append-static><transform-into>(${1:sndTransform:SoundTransform});</transform-into></append-static></behavior></completion><completion string="SoundChannel"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="stop"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.SoundLoaderContext"><completion string="bufferTime"></completion><completion string="checkPolicyFile"></completion><completion string="SoundLoaderContext"><behavior><append-static><transform-into>(${1:bufferTime:Number=1000}, ${2:checkPolicyFile:Boolean=false});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.SoundMixer"><completion string="bufferTime"><behavior><append-static><transform-into>(${1:bufferTime:int});</transform-into></append-static></behavior></completion><completion string="soundTransform"><behavior><append-static><transform-into>(${1:sndTransform:SoundTransform});</transform-into></append-static></behavior></completion><completion string="areSoundsInaccessible"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="computeSpectrum"><behavior><append-static><transform-into>(${1:outputArray:ByteArray}, ${2:FFTMode:Boolean=false}, ${3:stretchFactor:int=0});</transform-into></append-static></behavior></completion><completion string="SoundMixer"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="stopAll"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.SoundTransform"><completion string="leftToLeft"><behavior><append-static><transform-into>(${1:leftToLeft:Number});</transform-into></append-static></behavior></completion><completion string="leftToRight"><behavior><append-static><transform-into>(${1:leftToRight:Number});</transform-into></append-static></behavior></completion><completion string="pan"><behavior><append-static><transform-into>(${1:panning:Number});</transform-into></append-static></behavior></completion><completion string="rightToLeft"><behavior><append-static><transform-into>(${1:rightToLeft:Number});</transform-into></append-static></behavior></completion><completion string="rightToRight"><behavior><append-static><transform-into>(${1:rightToRight:Number});</transform-into></append-static></behavior></completion><completion string="volume"><behavior><append-static><transform-into>(${1:volume:Number});</transform-into></append-static></behavior></completion><completion string="SoundTransform"><behavior><append-static><transform-into>(${1:vol:Number=1}, ${2:panning:Number=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Video"><completion string="deblocking"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="smoothing"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="attachCamera"><behavior><append-static><transform-into>(${1:camera:Camera});</transform-into></append-static></behavior></completion><completion string="attachNetStream"><behavior><append-static><transform-into>(${1:netStream:NetStream});</transform-into></append-static></behavior></completion><completion string="clear"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="Video"><behavior><append-static><transform-into>(${1:width:int=320}, ${2:height:int=240});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.DynamicPropertyOutput"><completion string="DynamicPropertyOutput"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="writeDynamicProperty"><behavior><append-static><transform-into>(${1:name:String}, ${2:value:*});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.FileFilter"><completion string="description"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="extension"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="macType"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="FileFilter"><behavior><append-static><transform-into>(${1:description:String}, ${2:extension:String}, ${3:macType:String=null});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.FileReference"><completion string="cancel"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="download"><behavior><append-static><transform-into>(${1:request:URLRequest}, ${2:defaultFileName:String=null});</transform-into></append-static></behavior></completion><completion string="FileReference"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="upload"><behavior><append-static><transform-into>(${1:request:URLRequest}, ${2:uploadDataFieldName:String="Filedata"}, ${3:testUpload:Boolean=false});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.FileReferenceList"><completion string="browse"><behavior><append-static><transform-into>(${1:typeFilter:Array=null});</transform-into></append-static></behavior></completion><completion string="FileReferenceList"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.LocalConnection"><completion string="client"><behavior><append-static><transform-into>(${1:client:Object});</transform-into></append-static></behavior></completion><completion string="allowDomain"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="allowInsecureDomain"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="close"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="connect"><behavior><append-static><transform-into>(${1:connectionName:String});</transform-into></append-static></behavior></completion><completion string="LocalConnection"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="send"><behavior><append-static><transform-into>(${1:connectionName:String}, ${2:methodName:String});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.NetConnection"><completion string="client"><behavior><append-static><transform-into>(${1:object:Object});</transform-into></append-static></behavior></completion><completion string="defaultObjectEncoding"><behavior><append-static><transform-into>(${1:version:uint});</transform-into></append-static></behavior></completion><completion string="objectEncoding"><behavior><append-static><transform-into>(${1:version:uint});</transform-into></append-static></behavior></completion><completion string="proxyType"><behavior><append-static><transform-into>(${1:ptype:String});</transform-into></append-static></behavior></completion><completion string="addHeader"><behavior><append-static><transform-into>(${1:operation:String}, ${2:mustUnderstand:Boolean=false}, ${3:param:Object=null});</transform-into></append-static></behavior></completion><completion string="call"><behavior><append-static><transform-into>(${1:command:String}, ${2:responder:Responder});</transform-into></append-static></behavior></completion><completion string="close"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="connect"><behavior><append-static><transform-into>(${1:command:String});</transform-into></append-static></behavior></completion><completion string="NetConnection"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.NetStream"><completion string="bufferTime"><behavior><append-static><transform-into>(${1:bufferTime:Number});</transform-into></append-static></behavior></completion><completion string="checkPolicyFile"><behavior><append-static><transform-into>(${1:state:Boolean});</transform-into></append-static></behavior></completion><completion string="client"><behavior><append-static><transform-into>(${1:object:Object});</transform-into></append-static></behavior></completion><completion string="soundTransform"><behavior><append-static><transform-into>(${1:sndTransform:SoundTransform});</transform-into></append-static></behavior></completion><completion string="attachAudio"><behavior><append-static><transform-into>(${1:microphone:Microphone});</transform-into></append-static></behavior></completion><completion string="attachCamera"><behavior><append-static><transform-into>(${1:theCamera:Camera}, ${2:snapshotMilliseconds:int=-1});</transform-into></append-static></behavior></completion><completion string="close"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="NetStream"><behavior><append-static><transform-into>(${1:connection:NetConnection});</transform-into></append-static></behavior></completion><completion string="pause"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="play"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="publish"><behavior><append-static><transform-into>(${1:name:String=null}, ${2:type:String=null});</transform-into></append-static></behavior></completion><completion string="receiveAudio"><behavior><append-static><transform-into>(${1:flag:Boolean});</transform-into></append-static></behavior></completion><completion string="receiveVideo"><behavior><append-static><transform-into>(${1:flag:Boolean});</transform-into></append-static></behavior></completion><completion string="receiveVideoFPS"><behavior><append-static><transform-into>(${1:FPS:Number});</transform-into></append-static></behavior></completion><completion string="resume"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="seek"><behavior><append-static><transform-into>(${1:offset:Number});</transform-into></append-static></behavior></completion><completion string="send"><behavior><append-static><transform-into>(${1:handlerName:String});</transform-into></append-static></behavior></completion><completion string="togglePause"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.NetStreamInfo"><completion string="currentBytesPerSecond:Number"></completion><completion string="byteCount:Number"></completion><completion string="maxBytesPerSecond:Number"></completion><completion string="audioBytesPerSecond:Number"></completion><completion string="audioByteCount:Number"></completion><completion string="videoBytesPerSecond:Number"></completion><completion string="videoByteCount:Number"></completion><completion string="dataBytesPerSecond:Number"></completion><completion string="dataByteCount:Number"></completion><completion string="playbackBytesPerSecond:Number"></completion><completion string="droppedFrames:Number"></completion><completion string="audioBufferByteLength:Number"></completion><completion string="videoBufferByteLength:Number"></completion><completion string="dataBufferByteLength:Number"></completion><completion string="audioBufferLength:Number"></completion><completion string="videoBufferLength:Number"></completion><completion string="dataBufferLength:Number"></completion><completion string="SRTT:Number"></completion><completion string="audioLossRate:Number"></completion><completion string="NetStreamInfo("><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.NetStreamPlayTransitions"><completion string="APPEND:*"></completion><completion string="RESET:*"></completion><completion string="SWITCH:*"></completion><completion string="SWAP:*"></completion><completion string="STOP:*"></completion><completion string="NetStreamPlayTransitions("><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ObjectEncoding"><completion string="AMF0"></completion><completion string="AMF3"></completion><completion string="DEFAULT"></completion><completion string="dynamicPropertyWriter"><behavior><append-static><transform-into>(${1:object:IDynamicPropertyWriter});</transform-into></append-static></behavior></completion><completion string="ObjectEncoding"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Responder"><completion string="Responder"><behavior><append-static><transform-into>(${1:result:Function}, ${2:status:Function=null});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.SharedObject"><completion string="client"><behavior><append-static><transform-into>(${1:object:Object});</transform-into></append-static></behavior></completion><completion string="defaultObjectEncoding"><behavior><append-static><transform-into>(${1:version:uint});</transform-into></append-static></behavior></completion><completion string="fps"><behavior><append-static><transform-into>(${1:updatesPerSecond:Number});</transform-into></append-static></behavior></completion><completion string="objectEncoding"><behavior><append-static><transform-into>(${1:version:uint});</transform-into></append-static></behavior></completion><completion string="clear"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="close"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="connect"><behavior><append-static><transform-into>(${1:myConnection:NetConnection}, ${2:params:String=null});</transform-into></append-static></behavior></completion><completion string="deleteAll"><behavior><append-static><transform-into>(${1:url:String});</transform-into></append-static></behavior></completion><completion string="flush"><behavior><append-static><transform-into>(${1:minDiskSpace:int=0});</transform-into></append-static></behavior></completion><completion string="getDiskUsage"><behavior><append-static><transform-into>(${1:url:String});</transform-into></append-static></behavior></completion><completion string="getLocal"><behavior><append-static><transform-into>(${1:name:String}, ${2:localPath:String=null}, ${3:secure:Boolean=false});</transform-into></append-static></behavior></completion><completion string="getRemote"><behavior><append-static><transform-into>(${1:name:String}, ${2:remotePath:String=null}, ${3:persistence:Object=false}, ${4:secure:Boolean=false});</transform-into></append-static></behavior></completion><completion string="send"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="setDirty"><behavior><append-static><transform-into>(${1:propertyName:String});</transform-into></append-static></behavior></completion><completion string="setProperty"><behavior><append-static><transform-into>(${1:propertyName:String}, ${2:value:Object=null});</transform-into></append-static></behavior></completion><completion string="SharedObject"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.SharedObjectFlushStatus"><completion string="FLUSHED"></completion><completion string="PENDING"></completion><completion string="SharedObjectFlushStatus"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Socket"><completion string="endian"><behavior><append-static><transform-into>(${1:type:String});</transform-into></append-static></behavior></completion><completion string="objectEncoding"><behavior><append-static><transform-into>(${1:version:uint});</transform-into></append-static></behavior></completion><completion string="close"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="connect"><behavior><append-static><transform-into>(${1:host:String}, ${2:port:int});</transform-into></append-static></behavior></completion><completion string="flush"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readBoolean"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readByte"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readBytes"><behavior><append-static><transform-into>(${1:bytes:ByteArray}, ${2:offset:uint=0}, ${3:length:uint=0});</transform-into></append-static></behavior></completion><completion string="readDouble"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readFloat"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readInt"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readMultiByte"><behavior><append-static><transform-into>(${1:length:uint}, ${2:charSet:String});</transform-into></append-static></behavior></completion><completion string="readObject"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readShort"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readUnsignedByte"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readUnsignedInt"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readUnsignedShort"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readUTF"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readUTFBytes"><behavior><append-static><transform-into>(${1:length:uint});</transform-into></append-static></behavior></completion><completion string="Socket"><behavior><append-static><transform-into>(${1:host:String=null}, ${2:port:int=0});</transform-into></append-static></behavior></completion><completion string="writeBoolean"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="writeByte"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="writeBytes"><behavior><append-static><transform-into>(${1:bytes:ByteArray}, ${2:offset:uint=0}, ${3:length:uint=0});</transform-into></append-static></behavior></completion><completion string="writeDouble"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="writeFloat"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="writeInt"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="writeMultiByte"><behavior><append-static><transform-into>(${1:value:String}, ${2:charSet:String});</transform-into></append-static></behavior></completion><completion string="writeObject"><behavior><append-static><transform-into>(${1:object:*});</transform-into></append-static></behavior></completion><completion string="writeShort"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="writeUnsignedInt"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="writeUTF"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="writeUTFBytes"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.URLLoader"><completion string="bytesLoaded"></completion><completion string="bytesTotal"></completion><completion string="data"></completion><completion string="dataFormat"></completion><completion string="close"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="load"><behavior><append-static><transform-into>(${1:request:URLRequest});</transform-into></append-static></behavior></completion><completion string="URLLoader"><behavior><append-static><transform-into>(${1:request:URLRequest=null});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.URLLoaderDataFormat"><completion string="BINARY"></completion><completion string="TEXT"></completion><completion string="VARIABLES"></completion><completion string="URLLoaderDataFormat"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.URLRequest"><completion string="contentType"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="data"><behavior><append-static><transform-into>(${1:value:Object});</transform-into></append-static></behavior></completion><completion string="digest"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="method"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="requestHeaders"><behavior><append-static><transform-into>(${1:value:Array});</transform-into></append-static></behavior></completion><completion string="url"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="URLRequest"><behavior><append-static><transform-into>(${1:url:String=null});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.URLRequestHeader"><completion string="name"></completion><completion string="value"></completion><completion string="URLRequestHeader"><behavior><append-static><transform-into>(${1:name:String=""}, ${2:value:String=""});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.URLRequestMethod"><completion string="GET"></completion><completion string="POST"></completion><completion string="URLRequestMethod"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.URLStream"><completion string="endian"><behavior><append-static><transform-into>(${1:type:String});</transform-into></append-static></behavior></completion><completion string="objectEncoding"><behavior><append-static><transform-into>(${1:version:uint});</transform-into></append-static></behavior></completion><completion string="close"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="load"><behavior><append-static><transform-into>(${1:request:URLRequest});</transform-into></append-static></behavior></completion><completion string="readBoolean"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readByte"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readBytes"><behavior><append-static><transform-into>(${1:bytes:ByteArray}, ${2:offset:uint=0}, ${3:length:uint=0});</transform-into></append-static></behavior></completion><completion string="readDouble"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readFloat"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readInt"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readMultiByte"><behavior><append-static><transform-into>(${1:length:uint}, ${2:charSet:String});</transform-into></append-static></behavior></completion><completion string="readObject"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readShort"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readUnsignedByte"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readUnsignedInt"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readUnsignedShort"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readUTF"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readUTFBytes"><behavior><append-static><transform-into>(${1:length:uint});</transform-into></append-static></behavior></completion><completion string="URLStream"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.URLVariables"><completion string="decode"><behavior><append-static><transform-into>(${1:source:String});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="URLVariables"><behavior><append-static><transform-into>(${1:source:String=null});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.XMLSocket"><completion string="close"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="connect"><behavior><append-static><transform-into>(${1:host:String}, ${2:port:int});</transform-into></append-static></behavior></completion><completion string="send"><behavior><append-static><transform-into>(${1:object:*});</transform-into></append-static></behavior></completion><completion string="XMLSocket"><behavior><append-static><transform-into>(${1:host:String=null}, ${2:port:int=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.PrintJob"><completion string="addPage"><behavior><append-static><transform-into>(${1:sprite:Sprite}, ${2:printArea:Rectangle=null}, ${3:options:PrintJobOptions=null}, ${4:frameNum:int=0});</transform-into></append-static></behavior></completion><completion string="PrintJob"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="send"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="start"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.PrintJobOptions"><completion string="printAsBitmap"></completion><completion string="PrintJobOptions"><behavior><append-static><transform-into>(${1:printAsBitmap:Boolean=false});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.PrintJobOrientation"><completion string="LANDSCAPE"></completion><completion string="PORTRAIT"></completion><completion string="PrintJobOrientation"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.DeleteObjectSample"><completion string="id"></completion><completion string="size"></completion><completion string="DeleteObjectSample"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.NewObjectSample"><completion string="id"></completion><completion string="type"></completion><completion string="NewObjectSample"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Sample"><completion string="stack"></completion><completion string="time"></completion><completion string="Sample"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.StackFrame"><completion string="file"></completion><completion string="line"></completion><completion string="name"></completion><completion string="StackFrame"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ApplicationDomain"><completion string="ApplicationDomain"><behavior><append-static><transform-into>(${1:parentDomain:ApplicationDomain=null});</transform-into></append-static></behavior></completion><completion string="getDefinition"><behavior><append-static><transform-into>(${1:name:String});</transform-into></append-static></behavior></completion><completion string="hasDefinition"><behavior><append-static><transform-into>(${1:name:String});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Capabilities"><completion string="Capabilities"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.FSCommand"><completion string="_fscommand"><behavior><append-static><transform-into>(${1:command:String}, ${2:args:String});</transform-into></append-static></behavior></completion><completion string="FSCommand"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.IME"><completion string="constructOK"><behavior><append-static><transform-into>(${1:construct:Boolean});</transform-into></append-static></behavior></completion><completion string="conversionMode"><behavior><append-static><transform-into>(${1:mode:String});</transform-into></append-static></behavior></completion><completion string="enabled"><behavior><append-static><transform-into>(${1:enabled:Boolean});</transform-into></append-static></behavior></completion><completion string="doConversion"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="IME"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="setCompositionString"><behavior><append-static><transform-into>(${1:composition:String});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.IMEConversionMode"><completion string="ALPHANUMERIC_FULL"></completion><completion string="ALPHANUMERIC_HALF"></completion><completion string="CHINESE"></completion><completion string="JAPANESE_HIRAGANA"></completion><completion string="JAPANESE_KATAKANA_FULL"></completion><completion string="JAPANESE_KATAKANA_HALF"></completion><completion string="KOREAN"></completion><completion string="UNKNOWN"></completion><completion string="IMEConversionMode"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.LoaderContext"><completion string="applicationDomain"></completion><completion string="checkPolicyFile"></completion><completion string="securityDomain"></completion><completion string="LoaderContext"><behavior><append-static><transform-into>(${1:checkPolicyFile:Boolean=false}, ${2:applicationDomain:ApplicationDomain=null}, ${3:securityDomain:SecurityDomain=null});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Security"><completion string="LOCAL_TRUSTED"></completion><completion string="LOCAL_WITH_FILE"></completion><completion string="LOCAL_WITH_NETWORK"></completion><completion string="REMOTE"></completion><completion string="disableAVM1Loading"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="exactSettings"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="allowDomain"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="allowInsecureDomain"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="loadPolicyFile"><behavior><append-static><transform-into>(${1:url:String});</transform-into></append-static></behavior></completion><completion string="Security"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="showSettings"><behavior><append-static><transform-into>(${1:panel:String="default"});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.SecurityDomain"><completion string="SecurityDomain"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.SecurityPanel"><completion string="CAMERA"></completion><completion string="DEFAULT"></completion><completion string="DISPLAY"></completion><completion string="LOCAL_STORAGE"></completion><completion string="MICROPHONE"></completion><completion string="PRIVACY"></completion><completion string="SETTINGS_MANAGER"></completion><completion string="SecurityPanel"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.System"><completion string="useCodePage"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="exit"><behavior><append-static><transform-into>(${1:code:uint});</transform-into></append-static></behavior></completion><completion string="gc"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="pause"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="resume"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="setClipboard"><behavior><append-static><transform-into>(${1:string:String});</transform-into></append-static></behavior></completion><completion string="System"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.AntiAliasType"><completion string="ADVANCED"></completion><completion string="NORMAL"></completion><completion string="AntiAliasType"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.CSMSettings"><completion string="fontSize"></completion><completion string="insideCutoff"></completion><completion string="outsideCutoff"></completion><completion string="CSMSettings"><behavior><append-static><transform-into>(${1:fontSize:Number}, ${2:insideCutoff:Number}, ${3:outsideCutoff:Number});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Font"><completion string="enumerateFonts"><behavior><append-static><transform-into>(${1:enumerateDeviceFonts:Boolean=false});</transform-into></append-static></behavior></completion><completion string="Font"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="hasGlyphs"><behavior><append-static><transform-into>(${1:str:String});</transform-into></append-static></behavior></completion><completion string="registerFont"><behavior><append-static><transform-into>(${1:font:Class});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.FontStyle"><completion string="BOLD"></completion><completion string="BOLD_ITALIC"></completion><completion string="ITALIC"></completion><completion string="REGULAR"></completion><completion string="FontStyle"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.FontType"><completion string="DEVICE"></completion><completion string="EMBEDDED"></completion><completion string="FontType"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.GridFitType"><completion string="NONE"></completion><completion string="PIXEL"></completion><completion string="SUBPIXEL"></completion><completion string="GridFitType"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.StaticText"><completion string="StaticText"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.StyleSheet"><completion string="clear"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getStyle"><behavior><append-static><transform-into>(${1:styleName:String});</transform-into></append-static></behavior></completion><completion string="parseCSS"><behavior><append-static><transform-into>(${1:CSSText:String});</transform-into></append-static></behavior></completion><completion string="setStyle"><behavior><append-static><transform-into>(${1:styleName:String}, ${2:styleObject:Object});</transform-into></append-static></behavior></completion><completion string="StyleSheet"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="transform"><behavior><append-static><transform-into>(${1:formatObject:Object});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.TextColorType"><completion string="DARK_COLOR"></completion><completion string="LIGHT_COLOR"></completion><completion string="TextColorType"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.TextDisplayMode"><completion string="CRT"></completion><completion string="DEFAULT"></completion><completion string="LCD"></completion><completion string="TextDisplayMode"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.TextExtent"><completion string="ascent"></completion><completion string="descent"></completion><completion string="height"></completion><completion string="textFieldHeight"></completion><completion string="textFieldWidth"></completion><completion string="width"></completion><completion string="TextExtent"><behavior><append-static><transform-into>(${1:width:Number}, ${2:height:Number}, ${3:textFieldWidth:Number}, ${4:textFieldHeight:Number}, ${5:ascent:Number}, ${6:descent:Number});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.TextField"><completion string="alwaysShowSelection"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="antiAliasType"><behavior><append-static><transform-into>(${1:antiAliasType:String});</transform-into></append-static></behavior></completion><completion string="autoSize"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="background"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="backgroundColor"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="border"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="borderColor"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="condenseWhite"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="defaultTextFormat"><behavior><append-static><transform-into>(${1:format:TextFormat});</transform-into></append-static></behavior></completion><completion string="displayAsPassword"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="embedFonts"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="gridFitType"><behavior><append-static><transform-into>(${1:gridFitType:String});</transform-into></append-static></behavior></completion><completion string="htmlText"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="maxChars"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="mouseWheelEnabled"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="multiline"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="restrict"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="scrollH"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="scrollV"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="selectable"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="sharpness"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="styleSheet"><behavior><append-static><transform-into>(${1:value:StyleSheet});</transform-into></append-static></behavior></completion><completion string="text"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="textColor"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="thickness"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="type"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="useRichTextClipboard"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="wordWrap"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="appendText"><behavior><append-static><transform-into>(${1:newText:String});</transform-into></append-static></behavior></completion><completion string="getCharBoundaries"><behavior><append-static><transform-into>(${1:charIndex:int});</transform-into></append-static></behavior></completion><completion string="getCharIndexAtPoint"><behavior><append-static><transform-into>(${1:x:Number}, ${2:y:Number});</transform-into></append-static></behavior></completion><completion string="getFirstCharInParagraph"><behavior><append-static><transform-into>(${1:charIndex:int});</transform-into></append-static></behavior></completion><completion string="getImageReference"><behavior><append-static><transform-into>(${1:id:String});</transform-into></append-static></behavior></completion><completion string="getLineIndexAtPoint"><behavior><append-static><transform-into>(${1:x:Number}, ${2:y:Number});</transform-into></append-static></behavior></completion><completion string="getLineIndexOfChar"><behavior><append-static><transform-into>(${1:charIndex:int});</transform-into></append-static></behavior></completion><completion string="getLineLength"><behavior><append-static><transform-into>(${1:lineIndex:int});</transform-into></append-static></behavior></completion><completion string="getLineMetrics"><behavior><append-static><transform-into>(${1:lineIndex:int});</transform-into></append-static></behavior></completion><completion string="getLineOffset"><behavior><append-static><transform-into>(${1:lineIndex:int});</transform-into></append-static></behavior></completion><completion string="getLineText"><behavior><append-static><transform-into>(${1:lineIndex:int});</transform-into></append-static></behavior></completion><completion string="getParagraphLength"><behavior><append-static><transform-into>(${1:charIndex:int});</transform-into></append-static></behavior></completion><completion string="getRawText"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="getTextFormat"><behavior><append-static><transform-into>(${1:beginIndex:int=-1}, ${2:endIndex:int=-1});</transform-into></append-static></behavior></completion><completion string="getTextRuns"><behavior><append-static><transform-into>(${1:beginIndex:int=0}, ${2:endIndex:int=2147483647});</transform-into></append-static></behavior></completion><completion string="getXMLText"><behavior><append-static><transform-into>(${1:beginIndex:int=0}, ${2:endIndex:int=2147483647});</transform-into></append-static></behavior></completion><completion string="insertXMLText"><behavior><append-static><transform-into>(${1:beginIndex:int}, ${2:endIndex:int}, ${3:richText:String}, ${4:pasting:Boolean=false});</transform-into></append-static></behavior></completion><completion string="replaceSelectedText"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="replaceText"><behavior><append-static><transform-into>(${1:beginIndex:int}, ${2:endIndex:int}, ${3:newText:String});</transform-into></append-static></behavior></completion><completion string="setSelection"><behavior><append-static><transform-into>(${1:beginIndex:int}, ${2:endIndex:int});</transform-into></append-static></behavior></completion><completion string="setTextFormat"><behavior><append-static><transform-into>(${1:format:TextFormat}, ${2:beginIndex:int=-1}, ${3:endIndex:int=-1});</transform-into></append-static></behavior></completion><completion string="TextField"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.TextFieldAutoSize"><completion string="CENTER"></completion><completion string="LEFT"></completion><completion string="NONE"></completion><completion string="RIGHT"></completion><completion string="TextFieldAutoSize"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.TextFieldType"><completion string="DYNAMIC"></completion><completion string="INPUT"></completion><completion string="TextFieldType"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.TextFormat"><completion string="align"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="blockIndent"><behavior><append-static><transform-into>(${1:value:Object});</transform-into></append-static></behavior></completion><completion string="bold"><behavior><append-static><transform-into>(${1:value:Object});</transform-into></append-static></behavior></completion><completion string="bullet"><behavior><append-static><transform-into>(${1:value:Object});</transform-into></append-static></behavior></completion><completion string="color"><behavior><append-static><transform-into>(${1:value:Object});</transform-into></append-static></behavior></completion><completion string="display"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="font"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="indent"><behavior><append-static><transform-into>(${1:value:Object});</transform-into></append-static></behavior></completion><completion string="italic"><behavior><append-static><transform-into>(${1:value:Object});</transform-into></append-static></behavior></completion><completion string="kerning"><behavior><append-static><transform-into>(${1:value:Object});</transform-into></append-static></behavior></completion><completion string="leading"><behavior><append-static><transform-into>(${1:value:Object});</transform-into></append-static></behavior></completion><completion string="leftMargin"><behavior><append-static><transform-into>(${1:value:Object});</transform-into></append-static></behavior></completion><completion string="letterSpacing"><behavior><append-static><transform-into>(${1:value:Object});</transform-into></append-static></behavior></completion><completion string="rightMargin"><behavior><append-static><transform-into>(${1:value:Object});</transform-into></append-static></behavior></completion><completion string="size"><behavior><append-static><transform-into>(${1:value:Object});</transform-into></append-static></behavior></completion><completion string="tabStops"><behavior><append-static><transform-into>(${1:value:Array});</transform-into></append-static></behavior></completion><completion string="target"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="underline"><behavior><append-static><transform-into>(${1:value:Object});</transform-into></append-static></behavior></completion><completion string="url"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="TextFormat"><behavior><append-static><transform-into>(${1:font:String=null}, ${2:size:Object=null}, ${3:color:Object=null}, ${4:bold:Object=null}, ${5:italic:Object=null}, ${6:underline:Object=null}, ${7:url:String=null}, ${8:target:String=null}, ${9:align:String=null}, ${10:leftMargin:Object=null}, ${11:rightMargin:Object=null}, ${12:indent:Object=null}, ${13:leading:Object=null});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.TextFormatAlign"><completion string="CENTER"></completion><completion string="JUSTIFY"></completion><completion string="LEFT"></completion><completion string="RIGHT"></completion><completion string="TextFormatAlign"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.TextFormatDisplay"><completion string="BLOCK"></completion><completion string="INLINE"></completion><completion string="TextFormatDisplay"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.TextLineMetrics"><completion string="ascent"></completion><completion string="descent"></completion><completion string="height"></completion><completion string="leading"></completion><completion string="width"></completion><completion string="x"></completion><completion string="TextLineMetrics"><behavior><append-static><transform-into>(${1:x:Number}, ${2:width:Number}, ${3:height:Number}, ${4:ascent:Number}, ${5:descent:Number}, ${6:leading:Number});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.TextRenderer"><completion string="antiAliasType"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="displayMode"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="maxLevel"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="setAdvancedAntiAliasingTable"><behavior><append-static><transform-into>(${1:fontName:String}, ${2:fontStyle:String}, ${3:colorType:String}, ${4:advancedAntiAliasingTable:Array});</transform-into></append-static></behavior></completion><completion string="TextRenderer"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.TextRun"><completion string="beginIndex"></completion><completion string="endIndex"></completion><completion string="textFormat"></completion><completion string="TextRun"><behavior><append-static><transform-into>(${1:beginIndex:int}, ${2:endIndex:int}, ${3:textFormat:TextFormat});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.TextSnapshot"><completion string="findText"><behavior><append-static><transform-into>(${1:beginIndex:int}, ${2:textToFind:String}, ${3:caseSensitive:Boolean});</transform-into></append-static></behavior></completion><completion string="getSelected"><behavior><append-static><transform-into>(${1:beginIndex:int}, ${2:endIndex:int});</transform-into></append-static></behavior></completion><completion string="getSelectedText"><behavior><append-static><transform-into>(${1:includeLineEndings:Boolean=false});</transform-into></append-static></behavior></completion><completion string="getText"><behavior><append-static><transform-into>(${1:beginIndex:int}, ${2:endIndex:int}, ${3:includeLineEndings:Boolean=false});</transform-into></append-static></behavior></completion><completion string="getTextRunInfo"><behavior><append-static><transform-into>(${1:beginIndex:int}, ${2:endIndex:int});</transform-into></append-static></behavior></completion><completion string="hitTestTextNearPos"><behavior><append-static><transform-into>(${1:x:Number}, ${2:y:Number}, ${3:maxDistance:Number=0});</transform-into></append-static></behavior></completion><completion string="setSelectColor"><behavior><append-static><transform-into>(${1:hexColor:uint=16776960});</transform-into></append-static></behavior></completion><completion string="setSelected"><behavior><append-static><transform-into>(${1:beginIndex:int}, ${2:endIndex:int}, ${3:select:Boolean});</transform-into></append-static></behavior></completion><completion string="TextSnapshot"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Trace"><completion string="FILE"></completion><completion string="LISTENER"></completion><completion string="METHODS"></completion><completion string="METHODS_AND_LINES"></completion><completion string="METHODS_AND_LINES_WITH_ARGS"></completion><completion string="METHODS_WITH_ARGS"></completion><completion string="OFF"></completion><completion string="getLevel"><behavior><append-static><transform-into>(${1:target:int=2});</transform-into></append-static></behavior></completion><completion string="getListener"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="setLevel"><behavior><append-static><transform-into>(${1:l:int}, ${2:target:int=2});</transform-into></append-static></behavior></completion><completion string="setListener"><behavior><append-static><transform-into>(${1:f:Function});</transform-into></append-static></behavior></completion><completion string="Trace"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ContextMenu"><completion string="builtInItems"><behavior><append-static><transform-into>(${1:value:ContextMenuBuiltInItems});</transform-into></append-static></behavior></completion><completion string="customItems"><behavior><append-static><transform-into>(${1:value:Array});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="ContextMenu"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="hideBuiltInItems"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ContextMenuBuiltInItems"><completion string="forwardAndBack"></completion><completion string="loop"></completion><completion string="play"></completion><completion string="print"></completion><completion string="quality"></completion><completion string="rewind"></completion><completion string="save"></completion><completion string="zoom"></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="ContextMenuBuiltInItems"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ContextMenuItem"><completion string="caption"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="enabled"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="separatorBefore"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="visible"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="clone"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="ContextMenuItem"><behavior><append-static><transform-into>(${1:caption:String}, ${2:separatorBefore:Boolean=false}, ${3:enabled:Boolean=true}, ${4:visible:Boolean=true});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Keyboard"><completion string="BACKSPACE"></completion><completion string="CAPS_LOCK"></completion><completion string="CONTROL"></completion><completion string="DELETE"></completion><completion string="DOWN"></completion><completion string="END"></completion><completion string="ENTER"></completion><completion string="ESCAPE"></completion><completion string="F1"></completion><completion string="F10"></completion><completion string="F11"></completion><completion string="F12"></completion><completion string="F13"></completion><completion string="F14"></completion><completion string="F15"></completion><completion string="F2"></completion><completion string="F3"></completion><completion string="F4"></completion><completion string="F5"></completion><completion string="F6"></completion><completion string="F7"></completion><completion string="F8"></completion><completion string="F9"></completion><completion string="HOME"></completion><completion string="INSERT"></completion><completion string="LEFT"></completion><completion string="NUMPAD_0"></completion><completion string="NUMPAD_1"></completion><completion string="NUMPAD_2"></completion><completion string="NUMPAD_3"></completion><completion string="NUMPAD_4"></completion><completion string="NUMPAD_5"></completion><completion string="NUMPAD_6"></completion><completion string="NUMPAD_7"></completion><completion string="NUMPAD_8"></completion><completion string="NUMPAD_9"></completion><completion string="NUMPAD_ADD"></completion><completion string="NUMPAD_DECIMAL"></completion><completion string="NUMPAD_DIVIDE"></completion><completion string="NUMPAD_ENTER"></completion><completion string="NUMPAD_MULTIPLY"></completion><completion string="NUMPAD_SUBTRACT"></completion><completion string="PAGE_DOWN"></completion><completion string="PAGE_UP"></completion><completion string="RIGHT"></completion><completion string="SHIFT"></completion><completion string="SPACE"></completion><completion string="TAB"></completion><completion string="UP"></completion><completion string="isAccessible"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="Keyboard"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.KeyLocation"><completion string="LEFT"></completion><completion string="NUM_PAD"></completion><completion string="RIGHT"></completion><completion string="STANDARD"></completion><completion string="KeyLocation"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Mouse"><completion string="hide"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="Mouse"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="show"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ByteArray"><completion string="defaultObjectEncoding"><behavior><append-static><transform-into>(${1:version:uint});</transform-into></append-static></behavior></completion><completion string="endian"><behavior><append-static><transform-into>(${1:type:String});</transform-into></append-static></behavior></completion><completion string="length"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="objectEncoding"><behavior><append-static><transform-into>(${1:version:uint});</transform-into></append-static></behavior></completion><completion string="position"><behavior><append-static><transform-into>(${1:offset:uint});</transform-into></append-static></behavior></completion><completion string="ByteArray"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="compress"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readBoolean"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readByte"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readBytes"><behavior><append-static><transform-into>(${1:bytes:ByteArray}, ${2:offset:uint=0}, ${3:length:uint=0});</transform-into></append-static></behavior></completion><completion string="readDouble"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readFloat"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readInt"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readMultiByte"><behavior><append-static><transform-into>(${1:length:uint}, ${2:charSet:String});</transform-into></append-static></behavior></completion><completion string="readObject"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readShort"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readUnsignedByte"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readUnsignedInt"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readUnsignedShort"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readUTF"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readUTFBytes"><behavior><append-static><transform-into>(${1:length:uint});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="uncompress"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="writeBoolean"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="writeByte"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="writeBytes"><behavior><append-static><transform-into>(${1:bytes:ByteArray}, ${2:offset:uint=0}, ${3:length:uint=0});</transform-into></append-static></behavior></completion><completion string="writeDouble"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="writeFloat"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="writeInt"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="writeMultiByte"><behavior><append-static><transform-into>(${1:value:String}, ${2:charSet:String});</transform-into></append-static></behavior></completion><completion string="writeObject"><behavior><append-static><transform-into>(${1:object:*});</transform-into></append-static></behavior></completion><completion string="writeShort"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="writeUnsignedInt"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="writeUTF"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="writeUTFBytes"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Dictionary"><completion string="Dictionary"><behavior><append-static><transform-into>(${1:weakKeys:Boolean=false});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Endian"><completion string="BIG_ENDIAN"></completion><completion string="LITTLE_ENDIAN"></completion><completion string="Endian"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ObjectInput"><completion string="endian"><behavior><append-static><transform-into>(${1:type:String});</transform-into></append-static></behavior></completion><completion string="objectEncoding"><behavior><append-static><transform-into>(${1:version:uint});</transform-into></append-static></behavior></completion><completion string="ObjectInput"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readBoolean"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readByte"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readBytes"><behavior><append-static><transform-into>(${1:bytes:ByteArray}, ${2:offset:uint=0}, ${3:length:uint=0});</transform-into></append-static></behavior></completion><completion string="readDouble"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readFloat"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readInt"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readMultiByte"><behavior><append-static><transform-into>(${1:length:uint}, ${2:charSet:String});</transform-into></append-static></behavior></completion><completion string="readObject"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readShort"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readUnsignedByte"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readUnsignedInt"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readUnsignedShort"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readUTF"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="readUTFBytes"><behavior><append-static><transform-into>(${1:length:uint});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ObjectOutput"><completion string="endian"><behavior><append-static><transform-into>(${1:type:String});</transform-into></append-static></behavior></completion><completion string="objectEncoding"><behavior><append-static><transform-into>(${1:version:uint});</transform-into></append-static></behavior></completion><completion string="ObjectOutput"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="writeBoolean"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="writeByte"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="writeBytes"><behavior><append-static><transform-into>(${1:bytes:ByteArray}, ${2:offset:uint=0}, ${3:length:uint=0});</transform-into></append-static></behavior></completion><completion string="writeDouble"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="writeFloat"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="writeInt"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="writeMultiByte"><behavior><append-static><transform-into>(${1:value:String}, ${2:charSet:String});</transform-into></append-static></behavior></completion><completion string="writeObject"><behavior><append-static><transform-into>(${1:object:*});</transform-into></append-static></behavior></completion><completion string="writeShort"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="writeUnsignedInt"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="writeUTF"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion><completion string="writeUTFBytes"><behavior><append-static><transform-into>(${1:value:String});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Proxy"><completion string="callProperty"><behavior><append-static><transform-into>(${1:name:*});</transform-into></append-static></behavior></completion><completion string="deleteProperty"><behavior><append-static><transform-into>(${1:name:*});</transform-into></append-static></behavior></completion><completion string="getDescendants"><behavior><append-static><transform-into>(${1:name:*});</transform-into></append-static></behavior></completion><completion string="getProperty"><behavior><append-static><transform-into>(${1:name:*});</transform-into></append-static></behavior></completion><completion string="hasProperty"><behavior><append-static><transform-into>(${1:name:*});</transform-into></append-static></behavior></completion><completion string="isAttribute"><behavior><append-static><transform-into>(${1:name:*});</transform-into></append-static></behavior></completion><completion string="nextName"><behavior><append-static><transform-into>(${1:index:int});</transform-into></append-static></behavior></completion><completion string="nextNameIndex"><behavior><append-static><transform-into>(${1:index:int});</transform-into></append-static></behavior></completion><completion string="nextValue"><behavior><append-static><transform-into>(${1:index:int});</transform-into></append-static></behavior></completion><completion string="Proxy"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="setProperty"><behavior><append-static><transform-into>(${1:name:*}, ${2:value:*});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.SetIntervalTimer"><completion string="SetIntervalTimer"><behavior><append-static><transform-into>(${1:closure:Function}, ${2:delay:Number}, ${3:repeats:Boolean}, ${4:rest:Array});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Timer"><completion string="delay"><behavior><append-static><transform-into>(${1:value:Number});</transform-into></append-static></behavior></completion><completion string="repeatCount"><behavior><append-static><transform-into>(${1:value:int});</transform-into></append-static></behavior></completion><completion string="reset"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="start"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="stop"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="Timer"><behavior><append-static><transform-into>(${1:delay:Number}, ${2:repeatCount:int=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.XMLDocument"><completion string="docTypeDecl"></completion><completion string="idMap"></completion><completion string="ignoreWhite"></completion><completion string="xmlDecl"></completion><completion string="createElement"><behavior><append-static><transform-into>(${1:name:String});</transform-into></append-static></behavior></completion><completion string="createTextNode"><behavior><append-static><transform-into>(${1:text:String});</transform-into></append-static></behavior></completion><completion string="parseXML"><behavior><append-static><transform-into>(${1:source:String});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="XMLDocument"><behavior><append-static><transform-into>(${1:source:String=null});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.XMLNode"><completion string="firstChild"></completion><completion string="lastChild"></completion><completion string="nextSibling"></completion><completion string="nodeName"></completion><completion string="nodeType"></completion><completion string="nodeValue"></completion><completion string="parentNode"></completion><completion string="previousSibling"></completion><completion string="attributes"><behavior><append-static><transform-into>(${1:value:Object});</transform-into></append-static></behavior></completion><completion string="appendChild"><behavior><append-static><transform-into>(${1:node:XMLNode});</transform-into></append-static></behavior></completion><completion string="cloneNode"><behavior><append-static><transform-into>(${1:deep:Boolean});</transform-into></append-static></behavior></completion><completion string="getNamespaceForPrefix"><behavior><append-static><transform-into>(${1:prefix:String});</transform-into></append-static></behavior></completion><completion string="getPrefixForNamespace"><behavior><append-static><transform-into>(${1:ns:String});</transform-into></append-static></behavior></completion><completion string="hasChildNodes"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="insertBefore"><behavior><append-static><transform-into>(${1:node:XMLNode}, ${2:before:XMLNode});</transform-into></append-static></behavior></completion><completion string="removeNode"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="XMLNode"><behavior><append-static><transform-into>(${1:type:uint}, ${2:value:String});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.XMLNodeType"><completion string="CDATA_NODE"></completion><completion string="COMMENT_NODE"></completion><completion string="DOCUMENT_TYPE_NODE"></completion><completion string="ELEMENT_NODE"></completion><completion string="PROCESSING_INSTRUCTION_NODE"></completion><completion string="TEXT_NODE"></completion><completion string="XML_DECLARATION"></completion><completion string="XMLNodeType"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.XMLParser"><completion string="getNext"><behavior><append-static><transform-into>(${1:tag:XMLTag});</transform-into></append-static></behavior></completion><completion string="startParse"><behavior><append-static><transform-into>(${1:source:String}, ${2:ignoreWhite:Boolean});</transform-into></append-static></behavior></completion><completion string="XMLParser"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.XMLTag"><completion string="attrs"><behavior><append-static><transform-into>(${1:value:Object});</transform-into></append-static></behavior></completion><completion string="empty"><behavior><append-static><transform-into>(${1:value:Boolean});</transform-into></append-static></behavior></completion><completion string="type"><behavior><append-static><transform-into>(${1:value:uint});</transform-into></append-static></behavior></completion><completion string="value"><behavior><append-static><transform-into>(${1:v:String});</transform-into></append-static></behavior></completion><completion string="XMLTag"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Function"><completion string="length"></completion><completion string="prototype"><behavior><append-static><transform-into>(${1:p:*});</transform-into></append-static></behavior></completion><completion string="apply"><behavior><append-static><transform-into>(${1:thisArg:*=null}, ${2:argArray:*=null});</transform-into></append-static></behavior></completion><completion string="call"><behavior><append-static><transform-into>(${1:thisArg:*=null});</transform-into></append-static></behavior></completion><completion string="Function"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.int"><completion string="length"></completion><completion string="MAX_VALUE"></completion><completion string="MIN_VALUE"></completion><completion string="int"><behavior><append-static><transform-into>(${1:value:*=0});</transform-into></append-static></behavior></completion><completion string="toExponential"><behavior><append-static><transform-into>(${1:p:*=0});</transform-into></append-static></behavior></completion><completion string="toFixed"><behavior><append-static><transform-into>(${1:p:*=0});</transform-into></append-static></behavior></completion><completion string="toPrecision"><behavior><append-static><transform-into>(${1:p:*=0});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>(${1:radix:*=10});</transform-into></append-static></behavior></completion><completion string="valueOf"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Math"><completion string="E"></completion><completion string="LN10"></completion><completion string="LN2"></completion><completion string="LOG10E"></completion><completion string="LOG2E"></completion><completion string="PI"></completion><completion string="SQRT1_2"></completion><completion string="SQRT2"></completion><completion string="abs"><behavior><append-static><transform-into>(${1:x:Number});</transform-into></append-static></behavior></completion><completion string="acos"><behavior><append-static><transform-into>(${1:x:Number});</transform-into></append-static></behavior></completion><completion string="asin"><behavior><append-static><transform-into>(${1:x:Number});</transform-into></append-static></behavior></completion><completion string="atan"><behavior><append-static><transform-into>(${1:x:Number});</transform-into></append-static></behavior></completion><completion string="atan2"><behavior><append-static><transform-into>(${1:x:Number}, ${2:y:Number});</transform-into></append-static></behavior></completion><completion string="ceil"><behavior><append-static><transform-into>(${1:x:Number});</transform-into></append-static></behavior></completion><completion string="cos"><behavior><append-static><transform-into>(${1:x:Number});</transform-into></append-static></behavior></completion><completion string="exp"><behavior><append-static><transform-into>(${1:x:Number});</transform-into></append-static></behavior></completion><completion string="floor"><behavior><append-static><transform-into>(${1:x:Number});</transform-into></append-static></behavior></completion><completion string="log"><behavior><append-static><transform-into>(${1:x:Number});</transform-into></append-static></behavior></completion><completion string="Math"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="max"><behavior><append-static><transform-into>(${1:x:Number=null}, ${2:y:Number=null});</transform-into></append-static></behavior></completion><completion string="min"><behavior><append-static><transform-into>(${1:x:Number=null}, ${2:y:Number=null});</transform-into></append-static></behavior></completion><completion string="pow"><behavior><append-static><transform-into>(${1:x:Number}, ${2:y:Number});</transform-into></append-static></behavior></completion><completion string="random"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="round"><behavior><append-static><transform-into>(${1:x:Number});</transform-into></append-static></behavior></completion><completion string="sin"><behavior><append-static><transform-into>(${1:x:Number});</transform-into></append-static></behavior></completion><completion string="sqrt"><behavior><append-static><transform-into>(${1:x:Number});</transform-into></append-static></behavior></completion><completion string="tan"><behavior><append-static><transform-into>(${1:x:Number});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Namespace"><completion string="length"></completion><completion string="Namespace"><behavior><append-static><transform-into>(${1:prefix:*=null}, ${2:uri:*=null});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="valueOf"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Number"><completion string="length"></completion><completion string="MAX_VALUE"></completion><completion string="MIN_VALUE"></completion><completion string="NaN"></completion><completion string="NEGATIVE_INFINITY"></completion><completion string="POSITIVE_INFINITY"></completion><completion string="Number"><behavior><append-static><transform-into>(${1:value:*=0});</transform-into></append-static></behavior></completion><completion string="toExponential"><behavior><append-static><transform-into>(${1:p:*=0});</transform-into></append-static></behavior></completion><completion string="toFixed"><behavior><append-static><transform-into>(${1:p:*=0});</transform-into></append-static></behavior></completion><completion string="toPrecision"><behavior><append-static><transform-into>(${1:p:*=0});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>(${1:radix:*=10});</transform-into></append-static></behavior></completion><completion string="valueOf"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.Object"><completion string="length"></completion><completion string="hasOwnProperty"><behavior><append-static><transform-into>(${1:V:*=null});</transform-into></append-static></behavior></completion><completion string="init"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="isPrototypeOf"><behavior><append-static><transform-into>(${1:V:*=null});</transform-into></append-static></behavior></completion><completion string="Object"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="propertyIsEnumerable"><behavior><append-static><transform-into>(${1:V:*=null});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="valueOf"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="setPropertyIsEnumerable"><behavior><append-static><transform-into>(${1:name:String}, ${2:isEnum:Boolean=true});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.QName"><completion string="length"></completion><completion string="QName"><behavior><append-static><transform-into>(${1:namespace:*=null}, ${2:name:*=null});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="valueOf"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.RangeError"><completion string="length"></completion><completion string="RangeError"><behavior><append-static><transform-into>(${1:message:*=""}, ${2:id:*=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.ReferenceError"><completion string="length"></completion><completion string="ReferenceError"><behavior><append-static><transform-into>(${1:message:*=""}, ${2:id:*=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.RegExp"><completion string="length"></completion><completion string="lastIndex"><behavior><append-static><transform-into>(${1:i:int});</transform-into></append-static></behavior></completion><completion string="exec"><behavior><append-static><transform-into>(${1:s:String=""});</transform-into></append-static></behavior></completion><completion string="RegExp"><behavior><append-static><transform-into>(${1:pattern:*=null}, ${2:options:*=null});</transform-into></append-static></behavior></completion><completion string="test"><behavior><append-static><transform-into>(${1:s:String=""});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.SecurityError"><completion string="length"></completion><completion string="SecurityError"><behavior><append-static><transform-into>(${1:message:*=""}, ${2:id:*=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.String"><completion string="length"></completion><completion string="charAt"><behavior><append-static><transform-into>(${1:i:Number=0});</transform-into></append-static></behavior></completion><completion string="charCodeAt"><behavior><append-static><transform-into>(${1:i:Number=0});</transform-into></append-static></behavior></completion><completion string="concat"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="fromCharCode"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="indexOf"><behavior><append-static><transform-into>(${1:s:String=undefined}, ${2:i:Number=0});</transform-into></append-static></behavior></completion><completion string="lastIndexOf"><behavior><append-static><transform-into>(${1:s:String=undefined}, ${2:i:Number=2147483647});</transform-into></append-static></behavior></completion><completion string="localeCompare"><behavior><append-static><transform-into>(${1:other:String=null});</transform-into></append-static></behavior></completion><completion string="match"><behavior><append-static><transform-into>(${1:p:*=null});</transform-into></append-static></behavior></completion><completion string="replace"><behavior><append-static><transform-into>(${1:p:*=null}, ${2:repl:*=null});</transform-into></append-static></behavior></completion><completion string="search"><behavior><append-static><transform-into>(${1:p:*=null});</transform-into></append-static></behavior></completion><completion string="slice"><behavior><append-static><transform-into>(${1:start:Number=0}, ${2:end:Number=2147483647});</transform-into></append-static></behavior></completion><completion string="split"><behavior><append-static><transform-into>(${1:delim:*=null}, ${2:limit:*=4294967295});</transform-into></append-static></behavior></completion><completion string="String"><behavior><append-static><transform-into>(${1:value:*=""});</transform-into></append-static></behavior></completion><completion string="substr"><behavior><append-static><transform-into>(${1:start:Number=0}, ${2:len:Number=2147483647});</transform-into></append-static></behavior></completion><completion string="substring"><behavior><append-static><transform-into>(${1:start:Number=0}, ${2:end:Number=2147483647});</transform-into></append-static></behavior></completion><completion string="toLocaleLowerCase"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toLocaleUpperCase"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toLowerCase"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toUpperCase"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="valueOf"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.SyntaxError"><completion string="length"></completion><completion string="SyntaxError"><behavior><append-static><transform-into>(${1:message:*=""}, ${2:id:*=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.TypeError"><completion string="length"></completion><completion string="TypeError"><behavior><append-static><transform-into>(${1:message:*=""}, ${2:id:*=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.uint"><completion string="length"></completion><completion string="MAX_VALUE"></completion><completion string="MIN_VALUE"></completion><completion string="toExponential"><behavior><append-static><transform-into>(${1:p:*=0});</transform-into></append-static></behavior></completion><completion string="toFixed"><behavior><append-static><transform-into>(${1:p:*=0});</transform-into></append-static></behavior></completion><completion string="toPrecision"><behavior><append-static><transform-into>(${1:p:*=0});</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>(${1:radix:*=10});</transform-into></append-static></behavior></completion><completion string="uint"><behavior><append-static><transform-into>(${1:value:*=0});</transform-into></append-static></behavior></completion><completion string="valueOf"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.UninitializedError"><completion string="length"></completion><completion string="UninitializedError"><behavior><append-static><transform-into>(${1:message:*=""}, ${2:id:*=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.URIError"><completion string="length"></completion><completion string="URIError"><behavior><append-static><transform-into>(${1:message:*=""}, ${2:id:*=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.VerifyError"><completion string="length"></completion><completion string="VerifyError"><behavior><append-static><transform-into>(${1:message:*=""}, ${2:id:*=0});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.XML"><completion string="length"></completion><completion string="ignoreComments"><behavior><append-static><transform-into>(${1:newIgnore:Boolean});</transform-into></append-static></behavior></completion><completion string="ignoreProcessingInstructions"><behavior><append-static><transform-into>(${1:newIgnore:Boolean});</transform-into></append-static></behavior></completion><completion string="ignoreWhitespace"><behavior><append-static><transform-into>(${1:newIgnore:Boolean});</transform-into></append-static></behavior></completion><completion string="prettyIndent"><behavior><append-static><transform-into>(${1:newIndent:int});</transform-into></append-static></behavior></completion><completion string="prettyPrinting"><behavior><append-static><transform-into>(${1:newPretty:Boolean});</transform-into></append-static></behavior></completion><completion string="addNamespace"><behavior><append-static><transform-into>(${1:ns:*});</transform-into></append-static></behavior></completion><completion string="appendChild"><behavior><append-static><transform-into>(${1:child:*});</transform-into></append-static></behavior></completion><completion string="attribute"><behavior><append-static><transform-into>(${1:arg:*});</transform-into></append-static></behavior></completion><completion string="attributes"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="child"><behavior><append-static><transform-into>(${1:propertyName:*});</transform-into></append-static></behavior></completion><completion string="childIndex"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="children"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="comments"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="contains"><behavior><append-static><transform-into>(${1:value:*});</transform-into></append-static></behavior></completion><completion string="copy"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="defaultSettings"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="descendants"><behavior><append-static><transform-into>(${1:name:*="*"});</transform-into></append-static></behavior></completion><completion string="elements"><behavior><append-static><transform-into>(${1:name:*="*"});</transform-into></append-static></behavior></completion><completion string="hasComplexContent"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="hasOwnProperty"><behavior><append-static><transform-into>(${1:P:*=null});</transform-into></append-static></behavior></completion><completion string="hasSimpleContent"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="inScopeNamespaces"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="insertChildAfter"><behavior><append-static><transform-into>(${1:child1:*}, ${2:child2:*});</transform-into></append-static></behavior></completion><completion string="insertChildBefore"><behavior><append-static><transform-into>(${1:child1:*}, ${2:child2:*});</transform-into></append-static></behavior></completion><completion string="length"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="localName"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="name"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="namespace"><behavior><append-static><transform-into>(${1:prefix:*=null});</transform-into></append-static></behavior></completion><completion string="namespaceDeclarations"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="nodeKind"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="normalize"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="notification"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="parent"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="prependChild"><behavior><append-static><transform-into>(${1:value:*});</transform-into></append-static></behavior></completion><completion string="processingInstructions"><behavior><append-static><transform-into>(${1:name:*="*"});</transform-into></append-static></behavior></completion><completion string="propertyIsEnumerable"><behavior><append-static><transform-into>(${1:P:*=null});</transform-into></append-static></behavior></completion><completion string="removeNamespace"><behavior><append-static><transform-into>(${1:ns:*});</transform-into></append-static></behavior></completion><completion string="replace"><behavior><append-static><transform-into>(${1:propertyName:*}, ${2:value:*});</transform-into></append-static></behavior></completion><completion string="setChildren"><behavior><append-static><transform-into>(${1:value:*});</transform-into></append-static></behavior></completion><completion string="setLocalName"><behavior><append-static><transform-into>(${1:name:*});</transform-into></append-static></behavior></completion><completion string="setName"><behavior><append-static><transform-into>(${1:name:*});</transform-into></append-static></behavior></completion><completion string="setNamespace"><behavior><append-static><transform-into>(${1:ns:*});</transform-into></append-static></behavior></completion><completion string="setNotification"><behavior><append-static><transform-into>(${1:f:Function});</transform-into></append-static></behavior></completion><completion string="setSettings"><behavior><append-static><transform-into>(${1:o:Object=null});</transform-into></append-static></behavior></completion><completion string="settings"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="text"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toXMLString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="valueOf"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="XML"><behavior><append-static><transform-into>(${1:value:*=null});</transform-into></append-static></behavior></completion></set><set name="com.wizaado.classes.XMLList"><completion string="length"></completion><completion string="addNamespace"><behavior><append-static><transform-into>(${1:ns:*});</transform-into></append-static></behavior></completion><completion string="appendChild"><behavior><append-static><transform-into>(${1:child:*});</transform-into></append-static></behavior></completion><completion string="attribute"><behavior><append-static><transform-into>(${1:arg:*});</transform-into></append-static></behavior></completion><completion string="attributes"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="child"><behavior><append-static><transform-into>(${1:propertyName:*});</transform-into></append-static></behavior></completion><completion string="childIndex"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="children"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="comments"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="contains"><behavior><append-static><transform-into>(${1:value:*});</transform-into></append-static></behavior></completion><completion string="copy"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="descendants"><behavior><append-static><transform-into>(${1:name:*="*"});</transform-into></append-static></behavior></completion><completion string="elements"><behavior><append-static><transform-into>(${1:name:*="*"});</transform-into></append-static></behavior></completion><completion string="hasComplexContent"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="hasOwnProperty"><behavior><append-static><transform-into>(${1:P:*=null});</transform-into></append-static></behavior></completion><completion string="hasSimpleContent"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="inScopeNamespaces"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="insertChildAfter"><behavior><append-static><transform-into>(${1:child1:*}, ${2:child2:*});</transform-into></append-static></behavior></completion><completion string="insertChildBefore"><behavior><append-static><transform-into>(${1:child1:*}, ${2:child2:*});</transform-into></append-static></behavior></completion><completion string="length"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="localName"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="name"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="namespace"><behavior><append-static><transform-into>(${1:prefix:*=null});</transform-into></append-static></behavior></completion><completion string="namespaceDeclarations"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="nodeKind"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="normalize"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="parent"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="prependChild"><behavior><append-static><transform-into>(${1:value:*});</transform-into></append-static></behavior></completion><completion string="processingInstructions"><behavior><append-static><transform-into>(${1:name:*="*"});</transform-into></append-static></behavior></completion><completion string="propertyIsEnumerable"><behavior><append-static><transform-into>(${1:P:*=null});</transform-into></append-static></behavior></completion><completion string="removeNamespace"><behavior><append-static><transform-into>(${1:ns:*});</transform-into></append-static></behavior></completion><completion string="replace"><behavior><append-static><transform-into>(${1:propertyName:*}, ${2:value:*});</transform-into></append-static></behavior></completion><completion string="setChildren"><behavior><append-static><transform-into>(${1:value:*});</transform-into></append-static></behavior></completion><completion string="setLocalName"><behavior><append-static><transform-into>(${1:name:*});</transform-into></append-static></behavior></completion><completion string="setName"><behavior><append-static><transform-into>(${1:name:*});</transform-into></append-static></behavior></completion><completion string="setNamespace"><behavior><append-static><transform-into>(${1:ns:*});</transform-into></append-static></behavior></completion><completion string="text"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="toXMLString"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="valueOf"><behavior><append-static><transform-into>();</transform-into></append-static></behavior></completion><completion string="XMLList"><behavior><append-static><transform-into>(${1:value:*=null});</transform-into></append-static></behavior></completion></set></codesense>
